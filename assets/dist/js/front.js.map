{"version":3,"file":"/js/front.js","mappings":"6tBAAqBA,EAAe,WAS/B,O,EARD,SAAAA,EAAYC,GAAI,IAAAC,EAAA,M,4FAAAC,CAAA,KAAAH,GACZI,KAAKH,GAAKA,EACVG,KAAKC,QAAUJ,EAAGK,cAAc,WAChCF,KAAKG,QAAUN,EAAGK,cAAc,oBAChCF,KAAKI,UAAY,KACjBJ,KAAKK,WAAY,EACjBL,KAAKM,aAAc,EACnBN,KAAKC,QAAQM,iBAAiB,SAAS,SAACC,GAAC,OAAKV,EAAKW,QAAQD,EAAE,GACjE,E,EAAC,EAAAE,IAAA,UAAAC,MAED,SAAQH,GACJA,EAAEI,iBACEZ,KAAKK,WAAaL,KAAKM,cAIvBN,KAAKH,GAAGgB,KACRb,KAAKc,SAELd,KAAKe,SAEb,GAAC,CAAAL,IAAA,SAAAC,MAED,WAAS,IAAAK,EAAA,KACLhB,KAAKK,WAAY,EAGjB,IAAMY,EAAc,GAAHC,OAAMlB,KAAKG,QAAQgB,aAAY,MAG5CnB,KAAKI,WACLJ,KAAKI,UAAUgB,SAInBpB,KAAKI,UAAYJ,KAAKG,QAAQkB,QAAQ,CAClCC,OAAQ,CAACL,EARK,QASf,CACCM,SAAU,IACVC,OAAQ,aAGZxB,KAAKI,UAAUqB,SAAW,WAEtBT,EAAKnB,GAAG6B,gBAAgB,QACxBV,EAAKZ,UAAY,KACjBY,EAAKX,WAAY,EAEjBW,EAAKb,QAAQwB,MAAML,OAAS,EAChC,CACJ,GAAC,CAAAZ,IAAA,SAAAC,MAED,WAAS,IAAAiB,EAAA,KACL5B,KAAKM,aAAc,EAInBN,KAAKH,GAAGgC,aAAa,OAAQ,IAG7B,IAAMC,EAAY,GAAHZ,OAAMlB,KAAKG,QAAQ4B,aAAY,MAE1C/B,KAAKI,WACLJ,KAAKI,UAAUgB,SAInBpB,KAAKG,QAAQwB,MAAMK,SAAW,SAG9BhC,KAAKI,UAAYJ,KAAKG,QAAQkB,QAAQ,CAClCC,OAAQ,CAjBQ,MAiBMQ,IACvB,CACCP,SAAU,IACVC,OAAQ,aAGZxB,KAAKI,UAAUqB,SAAW,WACtBG,EAAKxB,UAAY,KACjBwB,EAAKtB,aAAc,EAEnBsB,EAAKzB,QAAQwB,MAAML,OAAS,GAC5BM,EAAKzB,QAAQwB,MAAMK,SAAW,EAClC,CACJ,I,4FAAC,CArF+B,GCEpCC,SAAS1B,iBAAiB,oBAAoB,SAAA2B,GAC1CD,SAASE,iBAAiB,kBAAkBC,SAAQ,SAACvC,GACjD,IAAID,EAAgBC,EACxB,GACJ,G","sources":["webpack://aaeditor/./assets/src/utils/DetailsAnimator.js","webpack://aaeditor/./assets/src/front.js"],"sourcesContent":["export default class DetailsAnimator {\r\n    constructor(el) {\r\n        this.el = el;\r\n        this.summary = el.querySelector('summary');\r\n        this.content = el.querySelector('.details-content');\r\n        this.animation = null;\r\n        this.isClosing = false;\r\n        this.isExpanding = false;\r\n        this.summary.addEventListener('click', (e) => this.onClick(e));\r\n    }\r\n\r\n    onClick(e) {\r\n        e.preventDefault();\r\n        if (this.isClosing || this.isExpanding) {\r\n            return;\r\n        }\r\n\r\n        if (this.el.open) {\r\n            this.shrink();\r\n        } else {\r\n            this.expand();\r\n        }\r\n    }\r\n\r\n    shrink() {\r\n        this.isClosing = true;\r\n\r\n        // 获取当前内容区域的高度作为动画起始点\r\n        const startHeight = `${this.content.offsetHeight}px`;\r\n        const endHeight = '0px';\r\n\r\n        if (this.animation) {\r\n            this.animation.cancel();\r\n        }\r\n\r\n        // 只对内容区域进行动画\r\n        this.animation = this.content.animate({\r\n            height: [startHeight, endHeight]\r\n        }, {\r\n            duration: 300,\r\n            easing: 'ease-out'\r\n        });\r\n\r\n        this.animation.onfinish = () => {\r\n            // 动画结束后，关闭 <details>\r\n            this.el.removeAttribute('open');\r\n            this.animation = null;\r\n            this.isClosing = false;\r\n            // 移除内联 height 样式，以便下次能正确计算\r\n            this.content.style.height = '';\r\n        };\r\n    }\r\n\r\n    expand() {\r\n        this.isExpanding = true;\r\n        const startHeight = '0px';\r\n\r\n        // 先把 <details> 设为 open，这样才能计算出内容区的 scrollHeight\r\n        this.el.setAttribute('open', '');\r\n\r\n        // 使用 scrollHeight 获取内容完全展开后的高度（包括 padding）\r\n        const endHeight = `${this.content.scrollHeight}px`;\r\n\r\n        if (this.animation) {\r\n            this.animation.cancel();\r\n        }\r\n\r\n        // 设置 overflow: hidden 防止内容在动画期间溢出\r\n        this.content.style.overflow = 'hidden';\r\n\r\n        // 对内容区域进行动画\r\n        this.animation = this.content.animate({\r\n            height: [startHeight, endHeight]\r\n        }, {\r\n            duration: 300,\r\n            easing: 'ease-out'\r\n        });\r\n\r\n        this.animation.onfinish = () => {\r\n            this.animation = null;\r\n            this.isExpanding = false;\r\n            // 动画结束后，移除内联样式，允许内容自适应高度\r\n            this.content.style.height = '';\r\n            this.content.style.overflow = '';\r\n        };\r\n    }\r\n}\r\n","import DetailsAnimator from \"./utils/DetailsAnimator\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", _ => {\r\n    document.querySelectorAll('.fence-details').forEach((el) => {\r\n        new DetailsAnimator(el);\r\n    });\r\n});"],"names":["DetailsAnimator","el","_this","_classCallCheck","this","summary","querySelector","content","animation","isClosing","isExpanding","addEventListener","e","onClick","key","value","preventDefault","open","shrink","expand","_this2","startHeight","concat","offsetHeight","cancel","animate","height","duration","easing","onfinish","removeAttribute","style","_this3","setAttribute","endHeight","scrollHeight","overflow","document","_","querySelectorAll","forEach"],"sourceRoot":""}