{"version":3,"file":"/js/config.js","mappings":"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","sources":["webpack://aaeditor/./assets/src/config/config.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    /**\r\n     * Apply a function to an array of DOM elements selected by a selector.\r\n     * @param {string} selector - The CSS selector.\r\n     * @param {function} func - The function to apply to selected elements.\r\n     * @param {HTMLElement} parent - The parent element to search within (default is document).\r\n     */\r\n    function applyFunctionToSelector(selector, func, parent = document) {\r\n        if (!parent) {\r\n            parent = document;\r\n        }\r\n        const selectedElements = parent.querySelectorAll(selector);\r\n        Array.from(selectedElements).forEach(func);\r\n    }\r\n\r\n    /**\r\n     * Shortcut for document.querySelector.\r\n     * @param {string} selector - The CSS selector.\r\n     * @param {HTMLElement} parent - The parent element to search within (default is document).\r\n     * @returns {HTMLElement|null} - The first matching element or null if not found.\r\n     */\r\n    function querySelector(selector, parent = document) {\r\n        if (!parent) {\r\n            parent = document;\r\n        }\r\n        return parent.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Compare two version numbers.\r\n     * @param {string} serverVersion - The server version number.\r\n     * @param {string} currentVersion - The current version number.\r\n     * @returns {number} - 1 if server version is greater, -1 if current version is greater, 0 if equal.\r\n     */\r\n    function compareVersions(serverVersion, currentVersion) {\r\n        const serverVersionArray = serverVersion.split('.');\r\n        const currentVersionArray = currentVersion.split('.');\r\n        const minLength = Math.min(serverVersionArray.length, currentVersionArray.length);\r\n\r\n        for (let i = 0; i < minLength; i++) {\r\n            const a = parseInt(serverVersionArray[i]);\r\n            const b = parseInt(currentVersionArray[i]);\r\n            if (a > b) {\r\n                return 1;\r\n            } else if (a < b) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        if (serverVersionArray.length > currentVersionArray.length) {\r\n            for (let j = minLength; j < serverVersionArray.length; j++) {\r\n                if (parseInt(serverVersionArray[j]) !== 0) {\r\n                    return 1;\r\n                }\r\n            }\r\n            return 0;\r\n        } else if (serverVersionArray.length < currentVersionArray.length) {\r\n            for (let j = minLength; j < currentVersionArray.length; j++) {\r\n                if (parseInt(currentVersionArray[j]) !== 0) {\r\n                    return -1;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    const xConfig = querySelector('.x-config');\r\n    const xContent = querySelector('.x-content', xConfig);\r\n\r\n    // Move the form element\r\n    const form = xConfig.parentNode.querySelector('form');\r\n    form.parentNode.removeChild(form);\r\n    xContent.appendChild(form);\r\n\r\n    // Restore the active state\r\n    const xTabs = querySelector('.x-tabs', xConfig);\r\n    let active = sessionStorage.getItem('x-active') || '.x-notice';\r\n\r\n    applyFunctionToSelector(active, el => {\r\n        el.classList.add('active');\r\n    }, xContent);\r\n\r\n    applyFunctionToSelector(`[data-class=\"${active.replace('.', '')}\"]`, el => {\r\n        el.classList.add('active');\r\n    }, xTabs);\r\n\r\n    // Handle tab clicks\r\n    Array.from(xTabs.querySelectorAll(':scope > li')).forEach(el => {\r\n        el.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            window.scrollTo(0, 0);\r\n\r\n            applyFunctionToSelector('.x-tabs li', el => {\r\n                el.classList.remove('active');\r\n            });\r\n\r\n            event.target.classList.add('active');\r\n            const className = '.' + event.target.dataset.class;\r\n            sessionStorage.setItem('x-active', className);\r\n\r\n            applyFunctionToSelector('.x-item', el => {\r\n                el.classList.remove('active');\r\n            }, xContent);\r\n\r\n            applyFunctionToSelector(className, el => {\r\n                el.classList.add('active');\r\n            }, xContent);\r\n        });\r\n    });\r\n\r\n    // Load the log\r\n    if (typeof window.XEditorUpdateURL === 'string' && window.XEditorUpdateURL.startsWith('http')) {\r\n        fetch(window.XEditorUpdateURL)\r\n            .then(response => response.text())\r\n            .then(text => {\r\n                const fragment = document.createElement('div');\r\n                fragment.innerHTML = text;\r\n                text = fragment.querySelector('.post-content,.entry-content')?.innerHTML;\r\n                let firstNode = fragment.querySelector('h2, h3');\r\n\r\n                const serverVersion =  firstNode.innerText.substring(0, 5);\r\n                const xNotice = querySelector('.x-notice', xConfig);\r\n                const title = querySelector('.title', xConfig);\r\n\r\n                querySelector('.loading', title).remove();\r\n                querySelector('.latest.version', title).innerHTML = firstNode.innerText;\r\n                querySelector('.message', xNotice).innerHTML = text;\r\n                querySelector('.latest.version', title).classList.add('active');\r\n\r\n                if (compareVersions(serverVersion, title.dataset.version) > 0) {\r\n                    querySelector('.latest.found', title).classList.add('active');\r\n                } else {\r\n                    querySelector('.latest', title).classList.add('active');\r\n                }\r\n            })\r\n            .catch(err => console.log('Request Failed', err));\r\n    }\r\n\r\n    if (location.hash) {\r\n        // 跳转到相应 Tab\r\n        let hashNode = document.querySelector(location.hash);\r\n        if (hashNode && hashNode.classList.contains('x-item')) {\r\n            document.querySelectorAll('.x-item.active').forEach(i => i.classList.remove('active'));\r\n            let classList = JSON.parse(JSON.stringify([...hashNode.classList]));\r\n            classList = classList.filter(c => c.startsWith('x-') && c !== \"x-item\");\r\n            document.querySelector(`[data-class=\"${classList[0]}\"]`).click();\r\n        }\r\n    }\r\n});\r\n"],"names":["document","addEventListener","applyFunctionToSelector","selector","func","parent","arguments","length","undefined","selectedElements","querySelectorAll","Array","from","forEach","querySelector","xConfig","xContent","form","parentNode","removeChild","appendChild","xTabs","active","sessionStorage","getItem","el","classList","add","concat","replace","event","preventDefault","stopPropagation","window","scrollTo","remove","target","className","dataset","setItem","XEditorUpdateURL","startsWith","fetch","then","response","text","_fragment$querySelect","fragment","createElement","innerHTML","firstNode","serverVersion","innerText","substring","xNotice","title","currentVersion","serverVersionArray","split","currentVersionArray","minLength","Math","min","i","a","parseInt","b","j","compareVersions","version","err","console","log","location","hash","hashNode","contains","JSON","parse","stringify","_toConsumableArray","filter","c","click"],"sourceRoot":""}