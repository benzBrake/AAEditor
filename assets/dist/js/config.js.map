{"version":3,"file":"/js/config.js","mappings":"mwBAAAA,SAASC,iBAAiB,oBAAoB,WAO1C,SAASC,EAAwBC,EAAUC,GAAyB,IAAnBC,EAAmB,uDAAVL,SACjDK,IACDA,EAASL,UAEb,IAAMM,EAAmBD,EAAOE,iBAAiBJ,GACjDK,MAAMC,KAAKH,GAAkBI,QAAQN,EACxC,CAQD,SAASO,EAAcR,GAA6B,IAAnBE,EAAmB,uDAAVL,SAItC,OAHKK,IACDA,EAASL,UAENK,EAAOM,cAAcR,EAC/B,CA0CD,IAAMS,EAAUD,EAAc,aACxBE,EAAWF,EAAc,aAAcC,GAGvCE,EAAOF,EAAQG,WAAWJ,cAAc,QAC9CG,EAAKC,WAAWC,YAAYF,GAC5BD,EAASI,YAAYH,GAGrB,IAAMI,EAAQP,EAAc,UAAWC,GACnCO,EAASC,eAAeC,QAAQ,aAAe,YA+DnD,GA7DAnB,EAAwBiB,GAAQ,SAAAG,GAC5BA,EAAGC,UAAUC,IAAI,SACpB,GAAEX,GAEHX,EAAwB,gBAAD,OAAiBiB,EAAOM,QAAQ,IAAK,IAArC,OAA8C,SAAAH,GACjEA,EAAGC,UAAUC,IAAI,SACpB,GAAEN,GAGHV,MAAMC,KAAKS,EAAMX,iBAAiB,gBAAgBG,SAAQ,SAAAY,GACtDA,EAAGrB,iBAAiB,SAAS,SAAAyB,GACzBA,EAAMC,iBACND,EAAME,kBACNC,OAAOC,SAAS,EAAG,GAEnB5B,EAAwB,cAAc,SAAAoB,GAClCA,EAAGC,UAAUQ,OAAO,SACvB,IAEDL,EAAMM,OAAOT,UAAUC,IAAI,UAC3B,IAAMS,EAAY,IAAMP,EAAMM,OAAOE,QAAb,MACxBd,eAAee,QAAQ,WAAYF,GAEnC/B,EAAwB,WAAW,SAAAoB,GAC/BA,EAAGC,UAAUQ,OAAO,SACvB,GAAElB,GAEHX,EAAwB+B,GAAW,SAAAX,GAC/BA,EAAGC,UAAUC,IAAI,SACpB,GAAEX,EACN,GACJ,IAGuC,iBAA7BgB,OAAOO,mBAAkCP,OAAOO,kBAAkBC,WAAW,SACpFC,MAAMT,OAAOO,mBACRG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAE,GAAQ,MACJC,EAAW1C,SAAS2C,cAAc,OACxCD,EAASE,UAAYH,EACrBA,EAAI,UAAGC,EAAS/B,cAAc,uCAA1B,aAAG,EAAwDiC,UAC/D,IAAIC,EAAYH,EAAS/B,cAAc,UAEjCmC,EAAiBD,EAAUE,UAAUC,UAAU,EAAG,GAClDC,EAAUtC,EAAc,YAAaC,GACrCsC,EAAQvC,EAAc,SAAUC,GAEtCD,EAAc,WAAYuC,GAAOnB,SACjCpB,EAAc,kBAAmBuC,GAAON,UAAYC,EAAUE,UAC9DpC,EAAc,WAAYsC,GAASL,UAAYH,EAC/C9B,EAAc,kBAAmBuC,GAAO3B,UAAUC,IAAI,UAhGlE,SAAyBsB,EAAeK,GAKpC,IAJA,IAAMC,EAAqBN,EAAcO,MAAM,KACzCC,EAAsBH,EAAeE,MAAM,KAC3CE,EAAYC,KAAKC,IAAIL,EAAmBM,OAAQJ,EAAoBI,QAEjEC,EAAI,EAAGA,EAAIJ,EAAWI,IAAK,CAChC,IAAMC,EAAIC,SAAST,EAAmBO,IAChCG,EAAID,SAASP,EAAoBK,IACvC,GAAIC,EAAIE,EACJ,OAAO,EACJ,GAAIF,EAAIE,EACX,OAAQ,CAEf,CAED,GAAIV,EAAmBM,OAASJ,EAAoBI,OAAQ,CACxD,IAAK,IAAIK,EAAIR,EAAWQ,EAAIX,EAAmBM,OAAQK,IACnD,GAAwC,IAApCF,SAAST,EAAmBW,IAC5B,OAAO,EAGf,OAAO,CACV,CAAM,GAAIX,EAAmBM,OAASJ,EAAoBI,OAAQ,CAC/D,IAAK,IAAIK,EAAIR,EAAWQ,EAAIT,EAAoBI,OAAQK,IACpD,GAAyC,IAArCF,SAASP,EAAoBS,IAC7B,OAAQ,EAGhB,OAAO,CACV,CAED,OAAO,CACV,CAkEeC,CAAgBlB,EAAeI,EAAMhB,QAAQ+B,SAAW,EACxDtD,EAAc,gBAAiBuC,GAAO3B,UAAUC,IAAI,UAEpDb,EAAc,UAAWuC,GAAO3B,UAAUC,IAAI,SAErD,IAtBL,OAuBW,SAAA0C,GAAG,OAAIC,QAAQC,IAAI,iBAAkBF,EAAlC,IAGdG,SAASC,KAAM,CAEf,IAAIC,EAAWvE,SAASW,cAAc0D,SAASC,MAC/C,GAAIC,GAAYA,EAAShD,UAAUiD,SAAS,UAAW,CACnDxE,SAASO,iBAAiB,kBAAkBG,SAAQ,SAAAiD,GAAC,OAAIA,EAAEpC,UAAUQ,OAAO,SAAvB,IACrD,IAAIR,EAAYkD,KAAKC,MAAMD,KAAKE,UAAL,EAAmBJ,EAAShD,aACvDA,EAAYA,EAAUqD,QAAO,SAAAC,GAAC,OAAIA,EAAExC,WAAW,OAAe,WAANwC,CAA1B,IAC9B7E,SAASW,cAAT,uBAAuCY,EAAU,GAAjD,OAAyDuD,OAC5D,CACJ,CAED,GAAIjD,OAAOkD,gBAAkB/E,SAASW,cAAc,0BAA2B,KA0BlEqE,EAAT,SAAwBtD,GACpBuD,EAAUC,MAAQT,KAAKE,UAAU,EAAIQ,EAAQpE,WAAWR,iBAAiB,2BAA2BqE,QAAO,SAAAC,GAAC,OAAIA,EAAEO,OAAN,IAAeC,KAAI,SAAAR,GAAC,OAAIA,EAAEK,KAAN,IACnI,EA3BGD,EAAYjF,SAASW,cAAc,0BACnCwE,EAAUF,EAAUK,mBACxBL,EAAU1D,UAAUC,IAAI,UACxBK,OAAOkD,eAAerE,SAAQ,SAAA6E,GAC1B,IAAIC,EAAOxF,SAAS2C,cAAc,QAC9B8C,EAAWzF,SAAS2C,cAAc,SACtC8C,EAASC,KAAO,WAChBD,EAASP,MAAQK,EAAQI,KACzBF,EAASG,GAAK,UAAYL,EAAQI,KAAKE,WAAW,IAAK,KACvD,IAAIC,EAAQ9F,SAAS2C,cAAc,SACnCmD,EAAM/C,UAAYwC,EAAQrC,MAAQ,IAAMqC,EAAQQ,YAAc,IAC9DD,EAAME,aAAa,MAAO,UAAYT,EAAQI,KAAKE,WAAW,IAAK,MACnEJ,EAASxF,iBAAiB,SAAU+E,GACpCQ,EAAKvE,YAAYwE,GACjBD,EAAKvE,YAAY6E,GACjBN,EAAKjE,UAAUC,IAAI,aACnB2D,EAAQc,OAAOT,EAClB,IAEoBf,KAAKC,MAAMO,EAAUC,OAAS,MACpCxE,SAAQ,SAAAwF,GACnB,IAAIC,EAAOlB,EAAUlE,WAAWJ,cAArB,uBAAmDuF,EAAnD,OACPC,IAAMA,EAAKf,SAAU,EAC5B,IAOD,IAAIgB,EAAgBpG,SAAS2C,cAAc,UAC3CyD,EAAcrD,UAAY,KAC1BqD,EAAcV,KAAO,SACrBU,EAAcnG,iBAAiB,SAAS,WACpCO,MAAMC,KAAKwE,EAAUlE,WAAWR,iBAAiB,2BAA2BG,SAAQ,SAAA2F,GAChFA,EAAMjB,SAAU,EAChBiB,EAAMvB,OACT,GACJ,IAED,IAAIwB,EAAkBtG,SAAS2C,cAAc,UAC7C2D,EAAgBvD,UAAY,MAC5BuD,EAAgBZ,KAAO,SACvBY,EAAgBrG,iBAAiB,SAAS,WACtCO,MAAMC,KAAKwE,EAAUlE,WAAWR,iBAAiB,2BAA2BG,SAAQ,SAAA2F,GAChFA,EAAMjB,SAAU,EAChBiB,EAAMvB,OACT,GACJ,IACDG,EAAUsB,uBAAuBtF,YAAYmF,GAC7CnB,EAAUsB,uBAAuBtF,YAAYqF,EAChD,CACJ,G","sources":["webpack://aaeditor/./assets/src/config/config.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    /**\r\n     * Apply a function to an array of DOM elements selected by a selector.\r\n     * @param {string} selector - The CSS selector.\r\n     * @param {function} func - The function to apply to selected elements.\r\n     * @param {HTMLElement} parent - The parent element to search within (default is document).\r\n     */\r\n    function applyFunctionToSelector(selector, func, parent = document) {\r\n        if (!parent) {\r\n            parent = document;\r\n        }\r\n        const selectedElements = parent.querySelectorAll(selector);\r\n        Array.from(selectedElements).forEach(func);\r\n    }\r\n\r\n    /**\r\n     * Shortcut for document.querySelector.\r\n     * @param {string} selector - The CSS selector.\r\n     * @param {HTMLElement} parent - The parent element to search within (default is document).\r\n     * @returns {HTMLElement|null} - The first matching element or null if not found.\r\n     */\r\n    function querySelector(selector, parent = document) {\r\n        if (!parent) {\r\n            parent = document;\r\n        }\r\n        return parent.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Compare two version numbers.\r\n     * @param {string} serverVersion - The server version number.\r\n     * @param {string} currentVersion - The current version number.\r\n     * @returns {number} - 1 if server version is greater, -1 if current version is greater, 0 if equal.\r\n     */\r\n    function compareVersions(serverVersion, currentVersion) {\r\n        const serverVersionArray = serverVersion.split('.');\r\n        const currentVersionArray = currentVersion.split('.');\r\n        const minLength = Math.min(serverVersionArray.length, currentVersionArray.length);\r\n\r\n        for (let i = 0; i < minLength; i++) {\r\n            const a = parseInt(serverVersionArray[i]);\r\n            const b = parseInt(currentVersionArray[i]);\r\n            if (a > b) {\r\n                return 1;\r\n            } else if (a < b) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        if (serverVersionArray.length > currentVersionArray.length) {\r\n            for (let j = minLength; j < serverVersionArray.length; j++) {\r\n                if (parseInt(serverVersionArray[j]) !== 0) {\r\n                    return 1;\r\n                }\r\n            }\r\n            return 0;\r\n        } else if (serverVersionArray.length < currentVersionArray.length) {\r\n            for (let j = minLength; j < currentVersionArray.length; j++) {\r\n                if (parseInt(currentVersionArray[j]) !== 0) {\r\n                    return -1;\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    const xConfig = querySelector('.x-config');\r\n    const xContent = querySelector('.x-content', xConfig);\r\n\r\n    // Move the form element\r\n    const form = xConfig.parentNode.querySelector('form');\r\n    form.parentNode.removeChild(form);\r\n    xContent.appendChild(form);\r\n\r\n    // Restore the active state\r\n    const xTabs = querySelector('.x-tabs', xConfig);\r\n    let active = sessionStorage.getItem('x-active') || '.x-notice';\r\n\r\n    applyFunctionToSelector(active, el => {\r\n        el.classList.add('active');\r\n    }, xContent);\r\n\r\n    applyFunctionToSelector(`[data-class=\"${active.replace('.', '')}\"]`, el => {\r\n        el.classList.add('active');\r\n    }, xTabs);\r\n\r\n    // Handle tab clicks\r\n    Array.from(xTabs.querySelectorAll(':scope > li')).forEach(el => {\r\n        el.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            window.scrollTo(0, 0);\r\n\r\n            applyFunctionToSelector('.x-tabs li', el => {\r\n                el.classList.remove('active');\r\n            });\r\n\r\n            event.target.classList.add('active');\r\n            const className = '.' + event.target.dataset.class;\r\n            sessionStorage.setItem('x-active', className);\r\n\r\n            applyFunctionToSelector('.x-item', el => {\r\n                el.classList.remove('active');\r\n            }, xContent);\r\n\r\n            applyFunctionToSelector(className, el => {\r\n                el.classList.add('active');\r\n            }, xContent);\r\n        });\r\n    });\r\n\r\n    // Load the log\r\n    if (typeof window.XEditorUpldateURL === 'string' && window.XEditorUpldateURL.startsWith('http')) {\r\n        fetch(window.XEditorUpldateURL)\r\n            .then(response => response.text())\r\n            .then(text => {\r\n                const fragment = document.createElement('div');\r\n                fragment.innerHTML = text;\r\n                text = fragment.querySelector('.post-content,.entry-content')?.innerHTML;\r\n                let firstNode = fragment.querySelector('h2, h3');\r\n\r\n                const serverVersion =  firstNode.innerText.substring(0, 5);\r\n                const xNotice = querySelector('.x-notice', xConfig);\r\n                const title = querySelector('.title', xConfig);\r\n\r\n                querySelector('.loading', title).remove();\r\n                querySelector('.latest.version', title).innerHTML = firstNode.innerText;\r\n                querySelector('.message', xNotice).innerHTML = text;\r\n                querySelector('.latest.version', title).classList.add('active');\r\n\r\n                if (compareVersions(serverVersion, title.dataset.version) > 0) {\r\n                    querySelector('.latest.found', title).classList.add('active');\r\n                } else {\r\n                    querySelector('.latest', title).classList.add('active');\r\n                }\r\n            })\r\n            .catch(err => console.log('Request Failed', err));\r\n    }\r\n\r\n    if (location.hash) {\r\n        // 跳转到相应 Tab\r\n        let hashNode = document.querySelector(location.hash);\r\n        if (hashNode && hashNode.classList.contains('x-item')) {\r\n            document.querySelectorAll('.x-item.active').forEach(i => i.classList.remove('active'));\r\n            let classList = JSON.parse(JSON.stringify([...hashNode.classList]));\r\n            classList = classList.filter(c => c.startsWith('x-') && c !== \"x-item\");\r\n            document.querySelector(`[data-class=\"${classList[0]}\"]`).click();\r\n        }\r\n    }\r\n\r\n    if (window.XEditorModules && document.querySelector('input[name=\"XModules\"]')) {\r\n        let inputNode = document.querySelector('input[name=\"XModules\"]'),\r\n            refNode = inputNode.nextElementSibling;\r\n        inputNode.classList.add('hidden');\r\n        window.XEditorModules.forEach(mConfig => {\r\n            let span = document.createElement('span');\r\n            let checkbox = document.createElement('input');\r\n            checkbox.type = \"checkbox\";\r\n            checkbox.value = mConfig.file;\r\n            checkbox.id = 'module-' + mConfig.file.replaceAll('.', '-');\r\n            let label = document.createElement('label');\r\n            label.innerText = mConfig.title + '【' + mConfig.description + '】';\r\n            label.setAttribute('for', 'module-' + mConfig.file.replaceAll('.', '-'));\r\n            checkbox.addEventListener('change', checkboxChange);\r\n            span.appendChild(checkbox);\r\n            span.appendChild(label);\r\n            span.classList.add('multiline');\r\n            refNode.before(span);\r\n        });\r\n\r\n        let enabledModules = JSON.parse(inputNode.value || '[]');\r\n        enabledModules.forEach(v => {\r\n            let node = inputNode.parentNode.querySelector(`input[value=\"${v}\"]`);\r\n            if (node) node.checked = true;\r\n        });\r\n\r\n        function checkboxChange(event) {\r\n            inputNode.value = JSON.stringify([...refNode.parentNode.querySelectorAll('input[type=\"checkbox\"]')].filter(c => c.checked).map(c => c.value))\r\n        }\r\n\r\n        // 增加全选和全不选按钮\r\n        let btnAllChecked = document.createElement('button');\r\n        btnAllChecked.innerText = '全选';\r\n        btnAllChecked.type = 'button';\r\n        btnAllChecked.addEventListener('click', () => {\r\n            Array.from(inputNode.parentNode.querySelectorAll('input[type=\"checkbox\"]')).forEach(input => {\r\n                input.checked = false;\r\n                input.click();\r\n            })\r\n        });\r\n\r\n        let btnAllUnchecked = document.createElement('button');\r\n        btnAllUnchecked.innerText = '全不选';\r\n        btnAllUnchecked.type = 'button';\r\n        btnAllUnchecked.addEventListener('click', () => {\r\n            Array.from(inputNode.parentNode.querySelectorAll('input[type=\"checkbox\"]')).forEach(input => {\r\n                input.checked = true;\r\n                input.click();\r\n            })\r\n        });\r\n        inputNode.previousElementSibling.appendChild(btnAllChecked);\r\n        inputNode.previousElementSibling.appendChild(btnAllUnchecked);\r\n    }\r\n});\r\n"],"names":["document","addEventListener","applyFunctionToSelector","selector","func","parent","selectedElements","querySelectorAll","Array","from","forEach","querySelector","xConfig","xContent","form","parentNode","removeChild","appendChild","xTabs","active","sessionStorage","getItem","el","classList","add","replace","event","preventDefault","stopPropagation","window","scrollTo","remove","target","className","dataset","setItem","XEditorUpldateURL","startsWith","fetch","then","response","text","fragment","createElement","innerHTML","firstNode","serverVersion","innerText","substring","xNotice","title","currentVersion","serverVersionArray","split","currentVersionArray","minLength","Math","min","length","i","a","parseInt","b","j","compareVersions","version","err","console","log","location","hash","hashNode","contains","JSON","parse","stringify","filter","c","click","XEditorModules","checkboxChange","inputNode","value","refNode","checked","map","nextElementSibling","mConfig","span","checkbox","type","file","id","replaceAll","label","description","setAttribute","before","v","node","btnAllChecked","input","btnAllUnchecked","previousElementSibling"],"sourceRoot":""}