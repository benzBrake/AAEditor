{"version":3,"file":"/js/main.js","mappings":"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","sources":["webpack://aaeditor/webpack/runtime/chunk loaded","webpack://aaeditor/./assets/src/utils/functions.js","webpack://aaeditor/./assets/src/utils/textarea.js","webpack://aaeditor/./assets/src/main.js","webpack://aaeditor/webpack/bootstrap","webpack://aaeditor/webpack/runtime/hasOwnProperty shorthand","webpack://aaeditor/webpack/runtime/jsonp chunk loading","webpack://aaeditor/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\r\n * 格式化字符串\r\n *\r\n * @param {string} format 需要格式化额字符串\r\n * @param {*} args 替换内容\r\n * @returns {*}\r\n */\r\nexport function sprintf(format, ...args) {\r\n    let index = 0;\r\n\r\n    return format.replace(/%[sd]/g, (match) => {\r\n        if (index >= args.length) {\r\n            return match;\r\n        }\r\n\r\n        const arg = args[index++];\r\n\r\n        if (match === '%s') {\r\n            return String(arg);\r\n        } else if (match === '%d') {\r\n            if (typeof arg === 'number') {\r\n                return String(arg);\r\n            } else {\r\n                throw new Error(`Argument ${index} is not a number.`);\r\n            }\r\n        }\r\n\r\n        return match;\r\n    });\r\n}\r\n\r\nexport function $C(tag, attrs, skipAttrs = []) {\r\n    let el = document.createElement(tag);\r\n    return $A(el, attrs, skipAttrs);\r\n}\r\n\r\nexport function $A(el, attrs = {}, skipAttrs = []) {\r\n    let setAttr, setText, setHTML;\r\n    if (\"attr\" in el) {\r\n        setAttr = function (name, val) {\r\n            el.attr(name, \"\" + val);\r\n        }\r\n        setText = function (val) {\r\n            el.text(val);\r\n        }\r\n        setHTML = function (val) {\r\n            el.html(val);\r\n        }\r\n    } else {\r\n        setAttr = function (name, val) {\r\n            el.setAttribute(name, \"\" + val);\r\n        }\r\n        setText = function (val) {\r\n            el.innerText = val;\r\n        }\r\n        setHTML = function (val) {\r\n            el.innerHTML = val;\r\n        }\r\n    }\r\n    for (let p in attrs) {\r\n        if (!skipAttrs.includes(p)) {\r\n            // @ts-ignore\r\n            let attr = attrs[p];\r\n            if (typeof attr === \"function\") {\r\n                attr = attr.toString();\r\n            }\r\n            switch (p) {\r\n                case 'innerText':\r\n                    setText(attr)\r\n                    break;\r\n                case 'innerHTML':\r\n                    setHTML(attr);\r\n                    break;\r\n                case 'style':\r\n                    if (typeof attr === \"object\") {\r\n                        let style = Object.entries(attr).map((en) => {\r\n                            return en.join(\":\");\r\n                        }).join(\"; \");\r\n                        setAttr('style', style);\r\n                    } else {\r\n                        setAttr('style', attr);\r\n                    }\r\n                    break;\r\n                default:\r\n                    setAttr(p, attr);\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n    return el;\r\n}\r\n\r\nexport function isObject(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Object]'\r\n}\r\n\r\nexport function isString(str) {\r\n    return typeof str === \"string\";\r\n}\r\n\r\nexport function isElement(obj) {\r\n    return obj instanceof HTMLElement;\r\n}","/**\r\n * TextAreaUtils 类用于管理文本区域（Textarea）的操作和事件绑定。\r\n */\r\nexport default class TextAreaUtils {\r\n    /**\r\n     * 创建一个 TextAreaUtils 的实例。\r\n     * @param {string} textareaSelector - 选择器，用于选择要管理的文本区域。\r\n     */\r\n    constructor(textareaSelector) {\r\n        this.textarea = document.querySelector(textareaSelector);\r\n        this.textarea.utils = this; // 将 TextAreaUtils 实例关联到 textarea 元素上\r\n        this.locked = false; // 文本区域是否被锁定\r\n        this.isFocused = false; // 默认未获取焦点\r\n        this.initFocusEvents(); // 初始化焦点事件\r\n    }\r\n\r\n    /**\r\n     * 运行命令并保存修改到 UndoStack。\r\n     * @param {(string)} operate - 要执行的操作，支持 'setContent', 'insertText', 'replaceSelectionText' 等。\r\n     * @param {...any} args - 操作所需的参数。\r\n     */\r\n    executeAndAddUndoStack(operate, ...args) {\r\n        const fn = () => {\r\n            // 找到对应的函数名并执行\r\n            if (operate === 'setContent') {\r\n                this.setContent(...args);\r\n            } else if (operate === 'insertText') {\r\n                this.insertText(...args);\r\n            } else if (operate === 'replaceSelectionText') {\r\n                this.replaceSelectionText(...args);\r\n            } // 添加其他支持的命令\r\n        };\r\n        if (this.textarea.pagedown) {\r\n            this.textarea.pagedown.textOperation(fn);\r\n        } else {\r\n            fn();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取文本区域实例。\r\n     * @returns {HTMLElement} 返回文本区域的 DOM 元素。\r\n     */\r\n    getInstance() {\r\n        return this.textarea;\r\n    }\r\n\r\n    /**\r\n     * 绑定事件处理程序。\r\n     * @param {string} eventType - 要绑定的事件类型，例如 'input', 'focus', 'blur' 等。\r\n     * @param {Function} handler - 事件处理程序函数。\r\n     */\r\n    on(eventType, handler) {\r\n        this.textarea.addEventListener(eventType, handler);\r\n    }\r\n\r\n    /**\r\n     * 解绑事件处理程序。\r\n     * @param {string} eventType - 要解绑的事件类型。\r\n     * @param {Function} handler - 要解绑的事件处理程序函数。\r\n     */\r\n    off(eventType, handler) {\r\n        this.textarea.removeEventListener(eventType, handler);\r\n    }\r\n\r\n    /**\r\n     * 获取文本区域的内容。\r\n     * @returns {string} 返回文本区域的当前内容。\r\n     */\r\n    getContent() {\r\n        return this.textarea.value;\r\n    }\r\n\r\n    /**\r\n     * 设置文本区域的内容。\r\n     * @param {string} content - 要设置的新内容。\r\n     */\r\n    setContent(content) {\r\n        if (!this.locked) {\r\n            this.textarea.value = content;\r\n            this.afterOperate(); // 触发 input 事件\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 锁定文本区域，阻止内容修改\r\n     */\r\n    lock() {\r\n        this.locked = true;\r\n        this.textarea.setAttribute('readonly', 'readonly');\r\n    }\r\n\r\n    /**\r\n     * 取消锁定文本区域，允许内容修改\r\n     */\r\n    unlock() {\r\n        this.locked = false;\r\n        this.textarea.removeAttribute('readonly');\r\n    }\r\n\r\n    /**\r\n     * 插入文本到当前光标的位置，成功返回真，否则返回假。\r\n     * @param {string} text - 要插入的文本。\r\n     * @returns {boolean} 如果插入操作成功，则返回 true；否则返回 false。\r\n     */\r\n    insertText(text) {\r\n        if (this.locked) return false;\r\n        const startPos = this.textarea.selectionStart;\r\n        const endPos = this.textarea.selectionEnd;\r\n        const currentText = this.textarea.value;\r\n\r\n        this.textarea.value = currentText.slice(0, startPos) + text + currentText.slice(endPos);\r\n        this.textarea.selectionStart = startPos + text.length;\r\n        this.textarea.selectionEnd = startPos + text.length;\r\n\r\n        this.afterOperate(); // 触发 input 事件\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 替换选中文本。\r\n     * @param {string} text - 用于替换选中文本的新文本。\r\n     * @returns {boolean} 如果替换操作成功，则返回 true；否则返回 false。\r\n     */\r\n    replaceSelectionText(text) {\r\n        if (this.locked) return false;\r\n        const startPos = this.textarea.selectionStart;\r\n        const endPos = this.textarea.selectionEnd;\r\n        const currentText = this.textarea.value;\r\n\r\n        this.textarea.value = currentText.slice(0, startPos) + text + currentText.slice(endPos);\r\n        this.textarea.selectionStart = startPos;\r\n        this.textarea.selectionEnd = startPos + text.length;\r\n\r\n        this.afterOperate(); // 触发 input 事件\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * 获取选中文本。\r\n     * @returns {string} 返回当前选中的文本。\r\n     */\r\n    getSelectedText() {\r\n        return this.textarea.value.substring(this.textarea.selectionStart, this.textarea.selectionEnd);\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中文本的起始和结束位置。\r\n     * @returns {{start: number, end: number}} 返回包含选中文本起始和结束位置的对象。\r\n     */\r\n    getSelection() {\r\n        return {\r\n            start: this.textarea.selectionStart,\r\n            end: this.textarea.selectionEnd\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 设置选中文本的起始和结束位置\r\n     * @param {number} start - 选区的开始位置。\r\n     * @param {number} end - 选区的结束位置。\r\n     * @returns {boolean} 如果设置选区成功，则返回 true；否则返回 false。\r\n     */\r\n    setSelection(start, end) {\r\n        if (this.locked) return false;\r\n        if (start >= 0 && end >= 0 && start <= this.textarea.value.length && end <= this.textarea.value.length) {\r\n            this.textarea.selectionStart = start;\r\n            this.textarea.selectionEnd = end;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取指定行号的文本。\r\n     * @param {number} lineNumber - 要获取的行号。\r\n     * @returns {string} 返回指定行号的文本，如果行号无效则返回空字符串。\r\n     */\r\n    getLineText(lineNumber) {\r\n        const text = this.textarea.value;\r\n        const lines = text.split('\\n');\r\n\r\n        if (lineNumber >= 0 && lineNumber < lines.length) {\r\n            return lines[lineNumber];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * 截取文本。\r\n     * @param {number} start - 起始位置。\r\n     * @param {number} end - 结束位置。\r\n     * @returns {string} 返回从起始位置到结束位置的文本。\r\n     */\r\n    getTextInRange(start, end) {\r\n        const text = this.textarea.value;\r\n        return text.substring(start, end);\r\n    }\r\n\r\n    /**\r\n     * 获取当前行的文本。\r\n     * @param {number} start - 开始位置，默认为行首，即 0。\r\n     * @param {number} end - 结束位置，默认为该行的长度。\r\n     * @returns {string} 返回从指定位置开始到结束位置的文本。\r\n     */\r\n    getCurrentLineText(start = 0, end = this.textarea.selectionStart) {\r\n        const text = this.textarea.value;\r\n        let lineStart = start;\r\n        let lineEnd = end;\r\n\r\n        while (lineStart > 0 && text[lineStart - 1] !== '\\n') {\r\n            lineStart--;\r\n        }\r\n\r\n        while (lineEnd < text.length && text[lineEnd] !== '\\n') {\r\n            lineEnd++;\r\n        }\r\n\r\n        return text.substring(lineStart, lineEnd);\r\n    }\r\n\r\n    /**\r\n     * 替换当前行的文本。\r\n     * @param {string} newText - 用于替换当前行的新文本。\r\n     * @returns {boolean} 如果替换成功，则返回 true；否则返回 false。\r\n     */\r\n    replaceCurrentLine(newText) {\r\n        if (this.locked) return false;\r\n        const startPos = this.textarea.selectionStart;\r\n        const endPos = this.textarea.selectionEnd;\r\n        const text = this.textarea.value;\r\n\r\n        let lineStart = startPos;\r\n        let lineEnd = endPos;\r\n\r\n        while (lineStart > 0 && text[lineStart - 1] !== '\\n') {\r\n            lineStart--;\r\n        }\r\n\r\n        while (lineEnd < text.length && text[lineEnd] !== '\\n') {\r\n            lineEnd++;\r\n        }\r\n\r\n        const newTextBefore = text.substring(0, lineStart);\r\n        const newTextAfter = text.substring(lineEnd);\r\n\r\n        this.textarea.value = newTextBefore + newText + newTextAfter;\r\n        this.textarea.selectionStart = lineStart;\r\n        this.textarea.selectionEnd = lineStart + newText.length;\r\n        this.afterOperate(); // 触发 input 事件\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取光标位置的行号和列号。\r\n     * @returns {{line: number, column: number}} 返回包含光标所在行号和列号的对象。\r\n     */\r\n    getCursorPosition() {\r\n        const startPos = this.textarea.selectionStart;\r\n        const text = this.textarea.value;\r\n        let lineCount = 1;\r\n        let columnCount = 1;\r\n\r\n        for (let i = 0; i < startPos; i++) {\r\n            if (text[i] === '\\n') {\r\n                lineCount++;\r\n                columnCount = 1;\r\n            } else {\r\n                columnCount++;\r\n            }\r\n        }\r\n\r\n        return {line: lineCount, column: columnCount};\r\n    }\r\n\r\n    /**\r\n     * 是否在行首。\r\n     * @returns {boolean} 如果光标在行首，则返回 true；否则返回 false。\r\n     */\r\n    isAtLineStart() {\r\n        const startPos = this.textarea.selectionStart;\r\n        const text = this.textarea.value;\r\n        return startPos === 0 || text[startPos - 1] === '\\n';\r\n    }\r\n\r\n    /**\r\n     * 是否在行尾。\r\n     * @returns {boolean} 如果光标在行尾，则返回 true；否则返回 false。\r\n     */\r\n    isAtLineEnd() {\r\n        const endPos = this.textarea.selectionEnd;\r\n        const text = this.textarea.value;\r\n        return endPos === text.length || text[endPos] === '\\n';\r\n    }\r\n\r\n    /**\r\n     * 是否在文本开头。\r\n     * @returns {boolean} 如果光标在文本开头，则返回 true；否则返回 false。\r\n     */\r\n    isAtStart() {\r\n        return this.textarea.selectionStart === 0;\r\n    }\r\n\r\n    /**\r\n     * 是否在文本结尾。\r\n     * @returns {boolean} 如果光标在文本结尾，则返回 true；否则返回 false。\r\n     */\r\n    isAtEnd() {\r\n        return this.textarea.selectionEnd === this.textarea.value.length;\r\n    }\r\n\r\n    // 初始化焦点事件\r\n    initFocusEvents() {\r\n        this.textarea.addEventListener('focus', () => {\r\n            this.isFocused = true;\r\n        });\r\n\r\n        this.textarea.addEventListener('blur', () => {\r\n            this.isFocused = false;\r\n        });\r\n    }\r\n\r\n    // 触发 input 事件\r\n    afterOperate() {\r\n        $(this.textarea).trigger('input');\r\n        this.textarea.focus();\r\n    }\r\n\r\n    /**\r\n     * 获取文本区域的滚动条位置。\r\n     * @returns {{top: number, left: number}} 返回包含滚动条垂直位置和水平位置的对象。\r\n     */\r\n    getScrollPosition() {\r\n        return {\r\n            top: this.textarea.scrollTop,\r\n            left: this.textarea.scrollLeft\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 设置文本区域的滚动条位置。\r\n     * @param {number} top - 垂直滚动位置。\r\n     * @param {number} left - 水平滚动位置。\r\n     */\r\n    setScrollPosition(top, left) {\r\n        this.textarea.scrollTop = top;\r\n        this.textarea.scrollLeft = left;\r\n    }\r\n\r\n}","import {$C, isElement, isObject, isString, sprintf} from \"./utils/functions\";\r\nimport TextAreaUtils from \"./utils/textarea\";\r\n\r\nclass XEditor {\r\n    constructor(sel, sel_preview) {\r\n        if (document.querySelector(sel)) {\r\n            this.textarea = new TextAreaUtils(sel);\r\n            this.previewArea = document.querySelector(sel_preview);\r\n        } else {\r\n            console.warn(sprintf(\"element [%s] not e\", sel));\r\n        }\r\n\r\n        this.isInit = false;\r\n        this.buttons = [];\r\n        this.insertProcessors = [];\r\n        $('body').on('XEditorAddButton', (event, ...buttons) => {\r\n            buttons.forEach(button => {\r\n                if (isObject(button)) {\r\n                    if (Object.keys(button).length) {\r\n                        this.buttons.push(button);\r\n                    } else {\r\n                        this.buttons.push({\r\n                            class: 'wmd-spacer'\r\n                        });\r\n                    }\r\n                } else if (isString(button) && button === \"splitter\") {\r\n                    this.buttons.push({\r\n                        class: 'wmd-spacer'\r\n                    });\r\n                }\r\n            });\r\n        }).on('XEditorInit', () => {\r\n            this.init();\r\n        }).on(\"XEditorRefresh\", () => {\r\n            let sp = this.textarea.getScrollPosition();\r\n            this.setContent(this.getContent());\r\n            this.textarea.setScrollPosition(sp.top, sp.left);\r\n        }).on('XEditorAddInsertProcessor', (event, ...processors) => {\r\n            processors.forEach(processor => {\r\n                if (typeof processor === 'function') {\r\n                    this.insertProcessors.push(processor);\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 判断是不是 Markdown 模式\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isMarkdown() {\r\n        return $('[name=\"markdown\"]').val() === \"1\";\r\n    }\r\n\r\n    init() {\r\n        if (this.isInit) return;\r\n        this.isInit = true;\r\n        window.XEditor = this;\r\n        $(\"body\").append(`<div id=\"aa-wrapper\"></div>`)\r\n            .on('XEditorPreviewEnd', () => this.handlePreviewEnd())\r\n            .on('XEditorReplaceSelection', (e, text) => {\r\n                console.log('replaceSelection', text);\r\n                this.replaceSelection(text);\r\n            });\r\n        this.initToolbar();\r\n        $('body').trigger('XEditorPreviewEnd');\r\n    }\r\n\r\n    initToolbar() {\r\n        // 注册快捷键\r\n        const registerShortcut = (btn, shortcut, callback) => {\r\n            const isMac = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\r\n\r\n            // 校验快捷键格式是否正确\r\n            const isValidShortcut = /^([a-zA-Z0-9]|F[1-9]|10|11|12|\\+)+$/.test(shortcut);\r\n            if (!isValidShortcut) {\r\n                console.error('无效的快捷键格式');\r\n                return false;\r\n            }\r\n\r\n            // 处理大小写问题\r\n            shortcut = shortcut.toLowerCase();\r\n\r\n            // 检查是否为Mac系统，如果是，则将ctrl替换为cmd\r\n            if (isMac) {\r\n                shortcut = shortcut.replace('ctrl', 'cmd');\r\n            }\r\n\r\n            // 创建keydown事件处理函数\r\n            const handleKeyDown = (event) => {\r\n                if (!this.isFocused()) {\r\n                    // 只有在textarea处于焦点状态时响应快捷键事件\r\n                    return false;\r\n                }\r\n\r\n                const pressedKeys = [];\r\n                if (event.ctrlKey) {\r\n                    pressedKeys.push('ctrl');\r\n                }\r\n                if (event.altKey) {\r\n                    pressedKeys.push('alt');\r\n                }\r\n                if (event.shiftKey) {\r\n                    pressedKeys.push('shift');\r\n                }\r\n\r\n                // 只在有修饰键按下的情况下响应字母和数字键\r\n                if (/[a-zA-Z0-9]/.test(event.key) && pressedKeys.length > 0) {\r\n                    pressedKeys.push(event.key.toLowerCase());\r\n                }\r\n\r\n                const pressedShortcut = pressedKeys.join('+');\r\n\r\n                if (pressedShortcut === shortcut) {\r\n                    event.preventDefault(); // 阻止浏览器默认行为\r\n                    event.stopPropagation(); // 阻止事件冒泡\r\n                    event.objectTarget = btn;\r\n                    callback.call(this, event);\r\n                }\r\n            };\r\n\r\n            // 绑定keydown事件到document\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return true;\r\n        };\r\n\r\n        // 创建按钮\r\n        const createButton = (attrs = {}) => {\r\n            let btn = $C('li', {\r\n                ...attrs,\r\n                title: attrs.name\r\n            }, ['icon', 'command', 'onMounted']);\r\n            btn.classList.add('wmd-button');\r\n            let icon = $(attrs.icon);\r\n            if (icon.length) {\r\n                btn.appendChild(icon.get(0));\r\n            } else {\r\n                btn.innerHTML = attrs.icon;\r\n            }\r\n            // 检查是否存在shortcut属性\r\n            if (attrs.shortcut) {\r\n                if (registerShortcut(btn, attrs.shortcut, this.handleHotkey)) { // 注册按键，成功才修改 title\r\n                    btn.title = `${attrs.name} ${attrs.shortcut.toUpperCase()}`;\r\n                }\r\n            }\r\n\r\n            if (\"command\" in attrs) {\r\n                if (typeof attrs.command === \"function\") {\r\n                    btn.addEventListener('click', () => {\r\n                        attrs.command.call(this, {target: btn});\r\n                    });\r\n                } else {\r\n                    btn.setAttribute('onclick', attrs.command)\r\n                }\r\n            }\r\n\r\n            return btn;\r\n        }\r\n\r\n        // 创建分隔符\r\n        const createSplitter = (num = 0, attrs) => {\r\n            let el = $C('li', {\r\n                id: sprintf('wmd-spacer%d', num),\r\n                ...attrs\r\n            });\r\n            el.classList.add('wmd-spacer');\r\n            el.classList.add(sprintf('wmd-spacer%d', num));\r\n            return el;\r\n        }\r\n\r\n        const getSpacerCount = () => {\r\n            return $('#wmd-button-bar .wmd-spacer').length;\r\n        }\r\n\r\n        this.toolbar = $('#wmd-button-row');\r\n        this.buttons.forEach(btnCfg => {\r\n            let el, isExists = false;\r\n            if (\"id\" in btnCfg) {\r\n                if (document.getElementById(btnCfg.id)) {\r\n                    el = document.getElementById(btnCfg.id);\r\n                    isExists = true;\r\n                    if (\"icon\" in btnCfg) {\r\n                        el.innerHTML = btnCfg.icon;\r\n                    }\r\n                } else if (\"name\" in btnCfg) {\r\n                    if (!(\"icon\" in btnCfg)) {\r\n                        btnCfg.icon = `<span>${name}</span>`;\r\n                    }\r\n                    el = createButton(btnCfg);\r\n                } else {\r\n                    el = createSplitter(getSpacerCount() + 1, btnCfg);\r\n                }\r\n            } else {\r\n                el = createSplitter(getSpacerCount() + 1, btnCfg);\r\n            }\r\n\r\n            let isInserted = false,\r\n                refNode;\r\n\r\n            /**\r\n             * 获取插入参考节点\r\n             *\r\n             * @param {string} refSel 参考节点或者参考节点选择器\r\n             * @param {*} parent\r\n             * @return {*|jQuery|HTMLElement}\r\n             */\r\n            const getRefNode = (refSel, parent) => {\r\n                if (!parent) parent = this.toolbar;\r\n                if (isString(refSel)) {\r\n                    if (refSel.indexOf(\"|\") > -1) {\r\n                        let selArr = refSel.split(\"|\");\r\n                        for (let i = 0; i < selArr.length; i++) {\r\n                            let el = getRefNode(selArr[i], parent);\r\n                            if (el.length) return el;\r\n                        }\r\n                    } else {\r\n                        return $(refSel, parent);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (\"insertBefore\" in btnCfg) {\r\n                refNode = getRefNode(btnCfg.insertBefore, this.toolbar);\r\n                if (refNode) {\r\n                    refNode.before(el);\r\n                    isInserted = true;\r\n                }\r\n            } else if (\"insertAfter\" in btnCfg) {\r\n                refNode = getRefNode(btnCfg.insertAfter, this.toolbar);\r\n                if (refNode) {\r\n                    refNode.after(el);\r\n                    isInserted = true;\r\n                }\r\n            } else if (\"remove\" in btnCfg && btnCfg.remove && el.parentNode) {\r\n                el.parentNode.removeChild(el);\r\n            }\r\n\r\n            if (!isInserted && !isExists) {\r\n                this.toolbar.append(el);\r\n            }\r\n            if (typeof btnCfg.onMounted === \"function\") {\r\n                btnCfg.onMounted.call(this, {\r\n                    target: el\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleHotkey({objectTarget}) {\r\n        objectTarget.click();\r\n    }\r\n\r\n    handlePreviewEnd() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取文本框文本\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getContent() {\r\n        return this.textarea.getContent();\r\n    }\r\n\r\n    /**\r\n     * 设置文本框文本（记录到 UndoStack）\r\n     *\r\n     * @param {string} text\r\n     */\r\n    setContent(text) {\r\n        this.textarea.executeAndAddUndoStack('setContent', text);\r\n    }\r\n\r\n    /**\r\n     * 往光标虽在位置插入文本（记录到 UndoStack）\r\n     *\r\n     * @param {string} text\r\n     */\r\n    insertText(text) {\r\n        this.textarea.executeAndAddUndoStack('insertText', text);\r\n    }\r\n\r\n    /**\r\n     * 替换文本框选中文本（记录到 UndoStack）\r\n     *\r\n     * @param {string} text\r\n     */\r\n    replaceSelection(text) {\r\n        if (this.getSelectedText()) {\r\n            this.textarea.executeAndAddUndoStack('replaceSelection', text);\r\n        } else {\r\n            this.textarea.executeAndAddUndoStack('insertText', text);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取选中文本\r\n     *\r\n     * @return {string}\r\n     */\r\n    getSelectedText() {\r\n        return this.textarea.getSelectedText();\r\n    }\r\n\r\n    /**\r\n     * 判定是否聚焦到文本框了\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isFocused() {\r\n        return this.textarea.isFocused;\r\n    }\r\n\r\n    /**\r\n     * 增加前缀后缀。\r\n     * @param {string} prefix - 前缀。\r\n     * @param {string} postfix - 后缀。\r\n     * @param {string} defaultText - 没有选中文本时插入到前缀和后缀之间的文本。\r\n     */\r\n    wrapText(prefix, postfix, defaultText = \"\") {\r\n        const {textarea} = this;\r\n        const selectedText = textarea.getSelectedText();\r\n        const currentPos = textarea.getSelection();\r\n        if (selectedText) {\r\n            let prefixPos = selectedText.indexOf(prefix);\r\n            let postfixPos = selectedText.lastIndexOf(postfix);\r\n            let insertNewText = false;\r\n            if (prefixPos !== -1 && postfixPos !== -1) {\r\n                // 前后缀都存在\r\n                if (prefixPos < postfixPos) {\r\n                    // 防止手抖，强制选中正确的位置\r\n                    currentPos.start = currentPos.start + prefixPos;\r\n                    currentPos.end = currentPos.start + postfixPos + postfix.length;\r\n                } else {\r\n                    insertNewText = true;\r\n                }\r\n            } else {\r\n                // 在选中文本前方搜索 prefix\r\n                if (prefixPos === -1) {\r\n                    let textBefore = textarea.getTextInRange(0, currentPos.start);\r\n                    // 从后往前找 postfix\r\n                    let lastPostfixPos = textBefore.lastIndexOf(postfix);\r\n                    if (lastPostfixPos > -1) {\r\n                        // 如果前边存在后缀，截取最后后一个后缀后边的文本\r\n                        textBefore = textBefore.slice(lastPostfixPos + postfix.length, textBefore.length);\r\n                    }\r\n                    prefixPos = textBefore.indexOf(prefix);\r\n                    if (prefixPos > -1) {\r\n                        currentPos.start = currentPos.start - textBefore.length + prefixPos;\r\n                    }\r\n                }\r\n                // 在选中文本后方搜索 postfix\r\n                if (postfixPos === -1) {\r\n                    let textAfter = textarea.getTextInRange(currentPos.end, textarea.getContent().length);\r\n                    // 从前往后找 prefix\r\n                    let firstPrefixPos = textAfter.indexOf(prefix);\r\n                    if (firstPrefixPos > -1) {\r\n                        textAfter = textAfter.slice(0, firstPrefixPos);\r\n                    }\r\n                    postfixPos = textAfter.indexOf(postfix);\r\n                    if (postfixPos !== -1) {\r\n                        currentPos.end = currentPos.end + postfixPos + postfix.length;\r\n                    }\r\n                }\r\n                if (prefixPos === -1 && postfixPos === -1) {\r\n                    insertNewText = true;\r\n                }\r\n            }\r\n            if (insertNewText) {\r\n                const newText = prefix + textarea.getSelectedText() + postfix;\r\n                textarea.executeAndAddUndoStack('replaceSelectionText', newText);\r\n                textarea.setSelection(currentPos.start + prefix.length, currentPos.start + newText.length - postfix.length);\r\n            } else {\r\n                textarea.setSelection(currentPos.start, currentPos.end);\r\n                let newText = textarea.getSelectedText();\r\n                if (newText.startsWith(prefix)) {\r\n                    newText = newText.slice(prefix.length);\r\n                }\r\n                if (newText.endsWith(postfix)) {\r\n                    newText = newText.slice(0, newText.length - postfix.length);\r\n                }\r\n                textarea.executeAndAddUndoStack('replaceSelectionText', newText);\r\n                textarea.setSelection(currentPos.start, currentPos.start + newText.length);\r\n            }\r\n        } else {\r\n            // 插入带有 prefix 和 postfix 的默认文本\r\n            const newPrefix = textarea.isAtLineStart() ? prefix : '\\n' + prefix;\r\n            const newPostfix = textarea.isAtLineEnd() ? postfix : postfix + '\\n';\r\n            const newText = newPrefix + defaultText + newPostfix;\r\n            textarea.executeAndAddUndoStack('insertText', newText);\r\n            const start = textarea.getSelection().start;\r\n            textarea.setSelection(start - newText.length + newPrefix.length, start - newPostfix.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 区块增加前缀。\r\n     * @param {string} prefix - 前缀。\r\n     * @param {string} defaultText - 没有选中文本时插入到前缀后面的文本。\r\n     */\r\n    blockPrefix(prefix, defaultText) {\r\n        const {textarea} = this;\r\n        let realSelectionText = textarea.getSelectedText();\r\n        defaultText || (defaultText = \"\");\r\n        if (realSelectionText.length) {\r\n            let realSelectionArr = realSelectionText.split('\\n');\r\n            console.log(realSelectionArr);\r\n            let newText = realSelectionArr.map((line, i) => {\r\n                return prefix.replace(\"%n\", i + 1) + line;\r\n            }).join(\"\\n\");\r\n            // 检查选中文本的第一行是否在行首，如果不是，在 newText 前添加换行符\r\n            if (!textarea.isAtLineStart()) {\r\n                newText = \"\\n\" + newText;\r\n            }\r\n            textarea.executeAndAddUndoStack('replaceSelectionText', newText + \"\\n\");\r\n        } else {\r\n            let newPrefix = prefix.replace(\"%n\", 1),\r\n                newText = newPrefix + defaultText + \"\\n\",\r\n                startPosFix = 0;\r\n            if (!textarea.isAtLineStart()) {\r\n                newText = \"\\n\" + newText;\r\n                startPosFix = 1;\r\n            }\r\n            textarea.executeAndAddUndoStack('insertText', newText);\r\n            textarea.setSelection(textarea.getSelection().start - newText.length + newPrefix.length + startPosFix, textarea.getSelection().start);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选中文本首行前缀处理。\r\n     * @param {string} prefix - 前缀。\r\n     * @param {string} defaultText - 没有选中文本时插入到前缀后面的文本。\r\n     */\r\n    firstSelectionLinePrefix(prefix, defaultText) {\r\n        const {textarea} = this;\r\n        let realSelectionText = textarea.getSelectedText();\r\n        if (realSelectionText.length) {\r\n            let realSelectionArr = realSelectionText.split('\\n');\r\n            let firstLine = realSelectionArr[0];\r\n\r\n            // 判断选中的第一行是否以指定前缀开头\r\n            if (firstLine.startsWith(prefix)) {\r\n                // 去除前缀\r\n                firstLine = firstLine.substring(prefix.length);\r\n            } else {\r\n                let {start: startPos, end: endPos} = textarea.getSelection();\r\n                if (textarea.getTextInRange(startPos - prefix.length, startPos) === prefix) {\r\n                    textarea.setSelection(startPos - prefix.length, endPos);\r\n                } else {\r\n                    // 增加前缀\r\n                    firstLine = prefix + firstLine;\r\n                }\r\n            }\r\n\r\n            // 重新组合文本\r\n            realSelectionArr[0] = firstLine;\r\n            let newText = realSelectionArr.join(\"\\n\");\r\n\r\n            // 检查选中文本的第一行是否在行首，如果不是，在 newText 前添加换行符\r\n            if (!textarea.isAtLineStart()) {\r\n                newText = \"\\n\" + newText;\r\n            }\r\n\r\n            textarea.executeAndAddUndoStack('replaceSelectionText', newText);\r\n        } else {\r\n            let newPrefix = prefix.replace(\"%n\", 1);\r\n            let newText, startPosFix = 0;\r\n\r\n            if (textarea.isAtLineStart()) {\r\n                newText = newPrefix + defaultText;\r\n            } else {\r\n                newText = \"\\n\" + newPrefix + defaultText;\r\n                startPosFix = 1;\r\n            }\r\n\r\n            textarea.executeAndAddUndoStack('insertText', newText);\r\n\r\n            // 设置光标位置\r\n            textarea.setSelection(textarea.getSelection().start - newText.length + newPrefix.length + startPosFix, textarea.getSelection().start);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开模态框 (参考 Joe 主题)\r\n     * @param options\r\n     */\r\n    openModal(options = {}) {\r\n        const _modalOptions = {\r\n            title: \"标题\",\r\n            innerHTML: '内容',\r\n            showFooter: true,\r\n            checkEmptyOnConfirm: true,\r\n            change: function (modal, params) {\r\n            },\r\n            confirm: function (modal, params) {\r\n                return true;\r\n            },\r\n            cancel: function (event) {\r\n            },\r\n            handle: function (modal) {\r\n            },\r\n            callback: function (modal) {\r\n            }\r\n        };\r\n        let modalOptions = Object.assign(_modalOptions, options);\r\n        let contentWrap = modalOptions.checkEmptyOnConfirm ? '<form class=\"params\"></form>' : \"\";\r\n        if ($(\"#aa-modal\").length < 1) {\r\n            $('#aa-wrapper').append(`<div id=\"aa-modal\" class=\"aa-modal\">\r\n    <div class=\"aa-modal-frame\">\r\n    <div class=\"aa-modal-header\">\r\n        <div class=\"aa-modal-header-title\"></div><div class=\"aa-modal-header-close\"><i class=\"close-icon\"></i></div>\r\n</div>\r\n    <div class=\"aa-modal-body\">\r\n        ${contentWrap}\r\n    </div>\r\n    <div class=\"aa-modal-footer\">\r\n        <button type=\"button\" class=\"aa-modal-footer-button aa-modal-footer-cancel\">取消</button><button type=\"button\" class=\"aa-modal-footer-button aa-modal-footer-confirm\">确定</button>\r\n    </div>\r\n</div>\r\n</div>`);\r\n        }\r\n        $('.aa-modal-header-title').html(modalOptions.title);\r\n        if (modalOptions.checkEmptyOnConfirm) {\r\n            $('.aa-modal-body .params').html(modalOptions.innerHTML);\r\n        } else {\r\n            $('.aa-modal-body').html(modalOptions.innerHTML);\r\n        }\r\n        let modalElm = $(\"#aa-modal\").get(0);\r\n        modalOptions.showFooter ? $(`.aa-modal-footer`).show() : $('.aa-modal-footer').hide();\r\n        $('body').addClass('no-scroll');\r\n        modalOptions.handle.call(this, modalElm);\r\n        $('.aa-modal-footer-confirm').on('click', () => {\r\n            let flag = true;\r\n            if (modalOptions.checkEmptyOnConfirm) {\r\n                // 检查必填输入框\r\n                const form = $('#aa-modal .aa-modal-body .params');\r\n                let params = form.serializeArray();\r\n                $.each(params, function (i, param) {\r\n                    let element = $(`#aa-modal .params [name=${param.name}]`);\r\n                    if (element.prop('required') && param.value === \"\") {\r\n                        flag = false;\r\n                        element.addClass('required-animate');\r\n                        setTimeout(function () {\r\n                            element.removeClass('required-animate');\r\n                        }, 800);\r\n                    }\r\n                });\r\n            }\r\n            if (flag && modalOptions.confirm.call(this, modalElm)) {\r\n                $('#aa-modal').remove();\r\n                $('body').removeClass('no-scroll');\r\n                modalOptions.callback.call(this, modalElm);\r\n            }\r\n        });\r\n        $('.aa-modal-header-close').on('click', (event) => {\r\n            modalOptions.cancel.call(this, event);\r\n            $('#aa-modal').removeClass(\"active\");\r\n            setTimeout(function () {\r\n                $('#aa-modal').remove();\r\n                $('body').removeClass('no-scroll');\r\n            }, 300);\r\n        });\r\n        $('.aa-modal-footer-cancel').on('click', (event) => {\r\n            $('#aa-modal').removeClass(\"active\");\r\n            modalOptions.cancel.call(modalElm, event);\r\n            setTimeout(function () {\r\n                $('#aa-modal').remove();\r\n                $('body').removeClass('no-scroll');\r\n            }, 300);\r\n        });\r\n        let form = $(\".params\", modalElm);\r\n        $(\"input,select,textarea\", form).on('change input', () => {\r\n            let data = form.serializeArray(),\r\n                params = {};\r\n            data.forEach((item) => {\r\n                params[item.name] = item.value;\r\n            })\r\n            modalOptions.change.call(this, modalElm, params);\r\n        });\r\n        $('#aa-modal').addClass('active');\r\n    }\r\n\r\n    /**\r\n     * 来自 Wordpress\r\n     * https://regex101.com/r/ja0b1p/1\r\n     * $0→code $2→tag $3→attr $5→text\r\n     * @param tag\r\n     * @returns {RegExp}\r\n     */\r\n    getShortCodeRegex(tag) {\r\n        return new RegExp('\\\\[(\\\\[?)(' + tag + ')(?![\\\\w-])([^\\\\]\\\\/]*(?:\\\\/(?!\\\\])[^\\\\]\\\\/]*)*?)(?:(\\\\/)\\\\]|\\\\](?:([^\\\\[]*(?:\\\\[(?!\\\\/\\\\2\\\\])[^\\\\[]*)*)(\\\\[\\\\/\\\\2\\\\]))?)(\\\\]?)', 'g');\r\n    }\r\n}\r\n\r\nnew XEditor(\"#text\", \"#md-preview\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t829: 0,\n\t701: 0,\n\t718: 0,\n\t650: 0,\n\t245: 0,\n\t552: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaaeditor\"] = self[\"webpackChunkaaeditor\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [701,718,650,245,552], () => (__webpack_require__(415)))\n__webpack_require__.O(undefined, [701,718,650,245,552], () => (__webpack_require__(307)))\n__webpack_require__.O(undefined, [701,718,650,245,552], () => (__webpack_require__(407)))\n__webpack_require__.O(undefined, [701,718,650,245,552], () => (__webpack_require__(793)))\n__webpack_require__.O(undefined, [701,718,650,245,552], () => (__webpack_require__(868)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [701,718,650,245,552], () => (__webpack_require__(3)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","sprintf","format","_len","arguments","length","args","Array","_key","index","replace","match","arg","String","Error","concat","$C","tag","attrs","skipAttrs","undefined","el","setAttr","setText","setHTML","name","val","attr","text","html","setAttribute","innerText","innerHTML","p","includes","toString","_typeof","Object","entries","map","en","join","$A","document","createElement","isString","str","TextAreaUtils","textareaSelector","_classCallCheck","this","textarea","querySelector","utils","locked","isFocused","initFocusEvents","key","value","operate","_this","fn","setContent","apply","insertText","replaceSelectionText","pagedown","textOperation","eventType","handler","addEventListener","removeEventListener","content","afterOperate","removeAttribute","startPos","selectionStart","endPos","selectionEnd","currentText","slice","substring","start","end","lineNumber","lines","split","lineStart","lineEnd","newText","newTextBefore","newTextAfter","lineCount","columnCount","i","line","column","_this2","$","trigger","focus","top","scrollTop","left","scrollLeft","XEditor","sel","sel_preview","previewArea","console","warn","isInit","buttons","insertProcessors","on","event","forEach","button","obj","prototype","call","keys","push","class","init","sp","getScrollPosition","getContent","setScrollPosition","_len2","processors","_key2","processor","window","append","handlePreviewEnd","e","log","replaceSelection","initToolbar","_this3","createButton","btn","_objectSpread","title","classList","add","icon","appendChild","get","shortcut","callback","isMac","test","navigator","platform","toLowerCase","pressedKeys","ctrlKey","altKey","shiftKey","preventDefault","stopPropagation","objectTarget","error","registerShortcut","handleHotkey","toUpperCase","command","target","createSplitter","num","id","getSpacerCount","toolbar","btnCfg","isExists","getElementById","refNode","isInserted","getRefNode","refSel","parent","indexOf","selArr","insertBefore","before","insertAfter","after","remove","parentNode","removeChild","onMounted","_ref","click","executeAndAddUndoStack","getSelectedText","prefix","postfix","defaultText","selectedText","currentPos","getSelection","prefixPos","postfixPos","lastIndexOf","insertNewText","textBefore","getTextInRange","lastPostfixPos","textAfter","firstPrefixPos","setSelection","startsWith","endsWith","newPrefix","isAtLineStart","newPostfix","isAtLineEnd","realSelectionText","realSelectionArr","startPosFix","firstLine","_textarea$getSelectio","_this4","options","modalOptions","assign","showFooter","checkEmptyOnConfirm","change","modal","params","confirm","cancel","handle","contentWrap","modalElm","show","hide","addClass","flag","serializeArray","each","param","element","prop","setTimeout","removeClass","form","data","item","RegExp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","o","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}