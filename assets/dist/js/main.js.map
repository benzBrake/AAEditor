{"version":3,"file":"/js/main.js","mappings":"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","sources":["webpack://aaeditor/webpack/runtime/chunk loaded","webpack://aaeditor/./assets/src/utils/functions.js","webpack://aaeditor/./assets/src/utils/textarea.js","webpack://aaeditor/./assets/src/main.js","webpack://aaeditor/webpack/bootstrap","webpack://aaeditor/webpack/runtime/hasOwnProperty shorthand","webpack://aaeditor/webpack/runtime/jsonp chunk loading","webpack://aaeditor/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/**\r\n * 格式化字符串\r\n *\r\n * @param {string} format 需要格式化额字符串\r\n * @param {*} args 替换内容\r\n * @returns {*}\r\n */\r\nexport function sprintf(format, ...args) {\r\n    let index = 0;\r\n\r\n    return format.replace(/%[sd]/g, (match) => {\r\n        if (index >= args.length) {\r\n            return match;\r\n        }\r\n\r\n        const arg = args[index++];\r\n\r\n        if (match === '%s') {\r\n            return String(arg);\r\n        } else if (match === '%d') {\r\n            if (typeof arg === 'number') {\r\n                return String(arg);\r\n            } else {\r\n                throw new Error(`Argument ${index} is not a number.`);\r\n            }\r\n        }\r\n\r\n        return match;\r\n    });\r\n}\r\n\r\nexport function $C(tag, attrs, skipAttrs = []) {\r\n    let el = document.createElement(tag);\r\n    return $A(el, attrs, skipAttrs);\r\n}\r\n\r\nexport function $A(el, attrs = {}, skipAttrs = []) {\r\n    let setAttr, setText, setHTML;\r\n    if (\"attr\" in el) {\r\n        setAttr = function (name, val) {\r\n            el.attr(name, \"\" + val);\r\n        }\r\n        setText = function (val) {\r\n            el.text(val);\r\n        }\r\n        setHTML = function (val) {\r\n            el.html(val);\r\n        }\r\n    } else {\r\n        setAttr = function (name, val) {\r\n            el.setAttribute(name, \"\" + val);\r\n        }\r\n        setText = function (val) {\r\n            el.innerText = val;\r\n        }\r\n        setHTML = function (val) {\r\n            el.innerHTML = val;\r\n        }\r\n    }\r\n    for (let p in attrs) {\r\n        if (!skipAttrs.includes(p)) {\r\n            // @ts-ignore\r\n            let attr = attrs[p];\r\n            if (typeof attr === \"function\") {\r\n                attr = attr.toString();\r\n            }\r\n            switch (p) {\r\n                case 'innerText':\r\n                    setText(attr)\r\n                    break;\r\n                case 'innerHTML':\r\n                    setHTML(attr);\r\n                    break;\r\n                case 'style':\r\n                    if (typeof attr === \"object\") {\r\n                        let style = Object.entries(attr).map((en) => {\r\n                            return en.join(\":\");\r\n                        }).join(\"; \");\r\n                        setAttr('style', style);\r\n                    } else {\r\n                        setAttr('style', attr);\r\n                    }\r\n                    break;\r\n                default:\r\n                    setAttr(p, attr);\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n    return el;\r\n}\r\n\r\nexport function isObject(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Object]'\r\n}\r\n\r\nexport function isString(str) {\r\n    return typeof str === \"string\";\r\n}\r\n\r\nexport function isElement(obj) {\r\n    return obj instanceof HTMLElement;\r\n}","/**\r\n * TextAreaUtils 类用于管理文本区域（Textarea）的操作和事件绑定。\r\n */\r\nexport default class TextAreaUtils {\r\n    /**\r\n     * 创建一个 TextAreaUtils 的实例。\r\n     * @param {string} textareaSelector - 选择器，用于选择要管理的文本区域。\r\n     */\r\n    constructor(textareaSelector) {\r\n        this.textarea = document.querySelector(textareaSelector);\r\n        this.textarea.utils = this; // 将 TextAreaUtils 实例关联到 textarea 元素上\r\n        this.locked = false; // 文本区域是否被锁定\r\n        this.isFocused = false; // 默认未获取焦点\r\n        this.initFocusEvents(); // 初始化焦点事件\r\n    }\r\n\r\n    /**\r\n     * 运行命令并保存修改到 UndoStack。\r\n     * @param {(string)} operate - 要执行的操作，支持 'setContent', 'insertText', 'replaceSelectionText' 等。\r\n     * @param {...any} args - 操作所需的参数。\r\n     */\r\n    executeAndAddUndoStack(operate, ...args) {\r\n        const fn = () => {\r\n            // 找到对应的函数名并执行\r\n            if (operate === 'setContent') {\r\n                this.setContent(...args);\r\n            } else if (operate === 'insertText') {\r\n                this.insertText(...args);\r\n            } else if (operate === 'replaceSelectionText') {\r\n                this.replaceSelectionText(...args);\r\n            } // 添加其他支持的命令\r\n        };\r\n        if (this.textarea.pagedown) {\r\n            this.textarea.pagedown.textOperation(fn);\r\n        } else {\r\n            fn();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取文本区域实例。\r\n     * @returns {HTMLElement} 返回文本区域的 DOM 元素。\r\n     */\r\n    getInstance() {\r\n        return this.textarea;\r\n    }\r\n\r\n    /**\r\n     * 绑定事件处理程序。\r\n     * @param {string} eventType - 要绑定的事件类型，例如 'input', 'focus', 'blur' 等。\r\n     * @param {Function} handler - 事件处理程序函数。\r\n     */\r\n    on(eventType, handler) {\r\n        this.textarea.addEventListener(eventType, handler);\r\n    }\r\n\r\n    /**\r\n     * 解绑事件处理程序。\r\n     * @param {string} eventType - 要解绑的事件类型。\r\n     * @param {Function} handler - 要解绑的事件处理程序函数。\r\n     */\r\n    off(eventType, handler) {\r\n        this.textarea.removeEventListener(eventType, handler);\r\n    }\r\n\r\n    /**\r\n     * 获取文本区域的内容。\r\n     * @returns {string} 返回文本区域的当前内容。\r\n     */\r\n    getContent() {\r\n        return this.textarea.value;\r\n    }\r\n\r\n    /**\r\n     * 设置文本区域的内容。\r\n     * @param {string} content - 要设置的新内容。\r\n     */\r\n    setContent(content) {\r\n        if (!this.locked) {\r\n            this.textarea.value = content;\r\n            this.afterOperate(); // 触发 input 事件\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 锁定文本区域，阻止内容修改\r\n     */\r\n    lock() {\r\n        this.locked = true;\r\n        this.textarea.setAttribute('readonly', 'readonly');\r\n    }\r\n\r\n    /**\r\n     * 取消锁定文本区域，允许内容修改\r\n     */\r\n    unlock() {\r\n        this.locked = false;\r\n        this.textarea.removeAttribute('readonly');\r\n    }\r\n\r\n    /**\r\n     * 插入文本到当前光标的位置，成功返回真，否则返回假。\r\n     * @param {string} text - 要插入的文本。\r\n     * @returns {boolean} 如果插入操作成功，则返回 true；否则返回 false。\r\n     */\r\n    insertText(text) {\r\n        if (this.locked) return false;\r\n        const startPos = this.textarea.selectionStart;\r\n        const endPos = this.textarea.selectionEnd;\r\n        const currentText = this.textarea.value;\r\n\r\n        this.textarea.value = currentText.slice(0, startPos) + text + currentText.slice(endPos);\r\n        this.textarea.selectionStart = startPos + text.length;\r\n        this.textarea.selectionEnd = startPos + text.length;\r\n\r\n        this.afterOperate(); // 触发 input 事件\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 替换选中文本。\r\n     * @param {string} text - 用于替换选中文本的新文本。\r\n     * @returns {boolean} 如果替换操作成功，则返回 true；否则返回 false。\r\n     */\r\n    replaceSelectionText(text) {\r\n        if (this.locked) return false;\r\n        const startPos = this.textarea.selectionStart;\r\n        const endPos = this.textarea.selectionEnd;\r\n        const currentText = this.textarea.value;\r\n\r\n        this.textarea.value = currentText.slice(0, startPos) + text + currentText.slice(endPos);\r\n        this.textarea.selectionStart = startPos;\r\n        this.textarea.selectionEnd = startPos + text.length;\r\n\r\n        this.afterOperate(); // 触发 input 事件\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * 获取选中文本。\r\n     * @returns {string} 返回当前选中的文本。\r\n     */\r\n    getSelectedText() {\r\n        return this.textarea.value.substring(this.textarea.selectionStart, this.textarea.selectionEnd);\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中文本的起始和结束位置。\r\n     * @returns {{start: number, end: number}} 返回包含选中文本起始和结束位置的对象。\r\n     */\r\n    getSelection() {\r\n        return {\r\n            start: this.textarea.selectionStart,\r\n            end: this.textarea.selectionEnd\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 设置选中文本的起始和结束位置\r\n     * @param {number} start - 选区的开始位置。\r\n     * @param {number} end - 选区的结束位置。\r\n     * @returns {boolean} 如果设置选区成功，则返回 true；否则返回 false。\r\n     */\r\n    setSelection(start, end) {\r\n        if (this.locked) return false;\r\n        if (start >= 0 && end >= 0 && start <= this.textarea.value.length && end <= this.textarea.value.length) {\r\n            this.textarea.selectionStart = start;\r\n            this.textarea.selectionEnd = end;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取指定行号的文本。\r\n     * @param {number} lineNumber - 要获取的行号。\r\n     * @returns {string} 返回指定行号的文本，如果行号无效则返回空字符串。\r\n     */\r\n    getLineText(lineNumber) {\r\n        const text = this.textarea.value;\r\n        const lines = text.split('\\n');\r\n\r\n        if (lineNumber >= 0 && lineNumber < lines.length) {\r\n            return lines[lineNumber];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * 截取文本。\r\n     * @param {number} start - 起始位置。\r\n     * @param {number} end - 结束位置。\r\n     * @returns {string} 返回从起始位置到结束位置的文本。\r\n     */\r\n    getTextInRange(start, end) {\r\n        const text = this.textarea.value;\r\n        return text.substring(start, end);\r\n    }\r\n\r\n    /**\r\n     * 获取当前行的文本。\r\n     * @param {number} start - 开始位置，默认为行首，即 0。\r\n     * @param {number} end - 结束位置，默认为该行的长度。\r\n     * @returns {string} 返回从指定位置开始到结束位置的文本。\r\n     */\r\n    getCurrentLineText(start = 0, end = this.textarea.selectionStart) {\r\n        const text = this.textarea.value;\r\n        let lineStart = start;\r\n        let lineEnd = end;\r\n\r\n        while (lineStart > 0 && text[lineStart - 1] !== '\\n') {\r\n            lineStart--;\r\n        }\r\n\r\n        while (lineEnd < text.length && text[lineEnd] !== '\\n') {\r\n            lineEnd++;\r\n        }\r\n\r\n        return text.substring(lineStart, lineEnd);\r\n    }\r\n\r\n    /**\r\n     * 替换当前行的文本。\r\n     * @param {string} newText - 用于替换当前行的新文本。\r\n     * @returns {boolean} 如果替换成功，则返回 true；否则返回 false。\r\n     */\r\n    replaceCurrentLine(newText) {\r\n        if (this.locked) return false;\r\n        const startPos = this.textarea.selectionStart;\r\n        const endPos = this.textarea.selectionEnd;\r\n        const text = this.textarea.value;\r\n\r\n        let lineStart = startPos;\r\n        let lineEnd = endPos;\r\n\r\n        while (lineStart > 0 && text[lineStart - 1] !== '\\n') {\r\n            lineStart--;\r\n        }\r\n\r\n        while (lineEnd < text.length && text[lineEnd] !== '\\n') {\r\n            lineEnd++;\r\n        }\r\n\r\n        const newTextBefore = text.substring(0, lineStart);\r\n        const newTextAfter = text.substring(lineEnd);\r\n\r\n        this.textarea.value = newTextBefore + newText + newTextAfter;\r\n        this.textarea.selectionStart = lineStart;\r\n        this.textarea.selectionEnd = lineStart + newText.length;\r\n        this.afterOperate(); // 触发 input 事件\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取光标位置的行号和列号。\r\n     * @returns {{line: number, column: number}} 返回包含光标所在行号和列号的对象。\r\n     */\r\n    getCursorPosition() {\r\n        const startPos = this.textarea.selectionStart;\r\n        const text = this.textarea.value;\r\n        let lineCount = 1;\r\n        let columnCount = 1;\r\n\r\n        for (let i = 0; i < startPos; i++) {\r\n            if (text[i] === '\\n') {\r\n                lineCount++;\r\n                columnCount = 1;\r\n            } else {\r\n                columnCount++;\r\n            }\r\n        }\r\n\r\n        return {line: lineCount, column: columnCount};\r\n    }\r\n\r\n    /**\r\n     * 是否在行首。\r\n     * @returns {boolean} 如果光标在行首，则返回 true；否则返回 false。\r\n     */\r\n    isAtLineStart() {\r\n        const startPos = this.textarea.selectionStart;\r\n        const text = this.textarea.value;\r\n        return startPos === 0 || text[startPos - 1] === '\\n';\r\n    }\r\n\r\n    /**\r\n     * 是否在行尾。\r\n     * @returns {boolean} 如果光标在行尾，则返回 true；否则返回 false。\r\n     */\r\n    isAtLineEnd() {\r\n        const endPos = this.textarea.selectionEnd;\r\n        const text = this.textarea.value;\r\n        return endPos === text.length || text[endPos] === '\\n';\r\n    }\r\n\r\n    /**\r\n     * 是否在文本开头。\r\n     * @returns {boolean} 如果光标在文本开头，则返回 true；否则返回 false。\r\n     */\r\n    isAtStart() {\r\n        return this.textarea.selectionStart === 0;\r\n    }\r\n\r\n    /**\r\n     * 是否在文本结尾。\r\n     * @returns {boolean} 如果光标在文本结尾，则返回 true；否则返回 false。\r\n     */\r\n    isAtEnd() {\r\n        return this.textarea.selectionEnd === this.textarea.value.length;\r\n    }\r\n\r\n    // 初始化焦点事件\r\n    initFocusEvents() {\r\n        this.textarea.addEventListener('focus', () => {\r\n            this.isFocused = true;\r\n        });\r\n\r\n        this.textarea.addEventListener('blur', () => {\r\n            this.isFocused = false;\r\n        });\r\n    }\r\n\r\n    // 触发 input 事件\r\n    afterOperate() {\r\n        $(this.textarea).trigger('input');\r\n        this.textarea.focus();\r\n    }\r\n\r\n    /**\r\n     * 获取文本区域的滚动条位置。\r\n     * @returns {{top: number, left: number}} 返回包含滚动条垂直位置和水平位置的对象。\r\n     */\r\n    getScrollPosition() {\r\n        return {\r\n            top: this.textarea.scrollTop,\r\n            left: this.textarea.scrollLeft\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 设置文本区域的滚动条位置。\r\n     * @param {number} top - 垂直滚动位置。\r\n     * @param {number} left - 水平滚动位置。\r\n     */\r\n    setScrollPosition(top, left) {\r\n        this.textarea.scrollTop = top;\r\n        this.textarea.scrollLeft = left;\r\n    }\r\n\r\n}","import {$C, isElement, isObject, isString, sprintf} from \"./utils/functions\";\r\nimport TextAreaUtils from \"./utils/textarea\";\r\n\r\nclass XEditor {\r\n    constructor(sel, sel_preview) {\r\n        if (document.querySelector(sel)) {\r\n            this.textarea = new TextAreaUtils(sel);\r\n            this.previewArea = document.querySelector(sel_preview);\r\n        } else {\r\n            console.warn(sprintf(\"element [%s] not e\", sel));\r\n        }\r\n\r\n        this.isInit = false;\r\n        this.buttons = [];\r\n        $('body').on('XEditorAddButton', (event, ...buttons) => {\r\n            buttons.forEach(button => {\r\n                if (isObject(button)) {\r\n                    if (Object.keys(button).length) {\r\n                        this.buttons.push(button);\r\n                    } else {\r\n                        this.buttons.push({\r\n                            class: 'wmd-spacer'\r\n                        });\r\n                    }\r\n                } else if (isString(button) && button === \"splitter\") {\r\n                    this.buttons.push({\r\n                        class: 'wmd-spacer'\r\n                    });\r\n                }\r\n            });\r\n        }).on('XEditorInit', () => {\r\n            this.init();\r\n        }).on(\"XEditorRefresh\", () => {\r\n            let sp = this.textarea.getScrollPosition();\r\n            this.setContent(this.getContent());\r\n            this.textarea.setScrollPosition(sp.top, sp.left);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 判断是不是 Markdown 模式\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isMarkdown() {\r\n        return $('[name=\"markdown\"]').val() === \"1\";\r\n    }\r\n\r\n    init() {\r\n        if (this.isInit) return;\r\n        this.isInit = true;\r\n        window.XEditor = this;\r\n        $(\"body\").append(`<div id=\"aa-wrapper\"></div>`)\r\n            .on('XEditorPreviewEnd', () => this.handlePreviewEnd())\r\n            .on('XEditorReplaceSelection', (e, text) => {\r\n                console.log('replaceSelection', text);\r\n                this.replaceSelection(text);\r\n            });\r\n        this.initToolbar();\r\n        $('body').trigger('XEditorPreviewEnd');\r\n    }\r\n\r\n    initToolbar() {\r\n        // 注册快捷键\r\n        const registerShortcut = (btn, shortcut, callback) => {\r\n            const isMac = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\r\n\r\n            // 校验快捷键格式是否正确\r\n            const isValidShortcut = /^([a-zA-Z0-9]|F[1-9]|10|11|12|\\+)+$/.test(shortcut);\r\n            if (!isValidShortcut) {\r\n                console.error('无效的快捷键格式');\r\n                return false;\r\n            }\r\n\r\n            // 处理大小写问题\r\n            shortcut = shortcut.toLowerCase();\r\n\r\n            // 检查是否为Mac系统，如果是，则将ctrl替换为cmd\r\n            if (isMac) {\r\n                shortcut = shortcut.replace('ctrl', 'cmd');\r\n            }\r\n\r\n            // 创建keydown事件处理函数\r\n            const handleKeyDown = (event) => {\r\n                if (!this.isFocused()) {\r\n                    // 只有在textarea处于焦点状态时响应快捷键事件\r\n                    return false;\r\n                }\r\n\r\n                const pressedKeys = [];\r\n                if (event.ctrlKey) {\r\n                    pressedKeys.push('ctrl');\r\n                }\r\n                if (event.altKey) {\r\n                    pressedKeys.push('alt');\r\n                }\r\n                if (event.shiftKey) {\r\n                    pressedKeys.push('shift');\r\n                }\r\n\r\n                // 只在有修饰键按下的情况下响应字母和数字键\r\n                if (/[a-zA-Z0-9]/.test(event.key) && pressedKeys.length > 0) {\r\n                    pressedKeys.push(event.key.toLowerCase());\r\n                }\r\n\r\n                const pressedShortcut = pressedKeys.join('+');\r\n\r\n                if (pressedShortcut === shortcut) {\r\n                    event.preventDefault(); // 阻止浏览器默认行为\r\n                    event.stopPropagation(); // 阻止事件冒泡\r\n                    event.objectTarget = btn;\r\n                    callback.call(this, event);\r\n                }\r\n            };\r\n\r\n            // 绑定keydown事件到document\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return true;\r\n        };\r\n\r\n        // 创建按钮\r\n        const createButton = (attrs = {}) => {\r\n            let btn = $C('li', {\r\n                ...attrs,\r\n                title: attrs.name\r\n            }, ['icon', 'command', 'onMounted']);\r\n            btn.classList.add('wmd-button');\r\n            let icon = $(attrs.icon);\r\n            if (icon.length) {\r\n                btn.appendChild(icon.get(0));\r\n            } else {\r\n                btn.innerHTML = attrs.icon;\r\n            }\r\n            // 检查是否存在shortcut属性\r\n            if (attrs.shortcut) {\r\n                if (registerShortcut(btn, attrs.shortcut, this.handleHotkey)) { // 注册按键，成功才修改 title\r\n                    btn.title = `${attrs.name} ${attrs.shortcut.toUpperCase()}`;\r\n                }\r\n            }\r\n\r\n            if (\"command\" in attrs) {\r\n                if (typeof attrs.command === \"function\") {\r\n                    btn.addEventListener('click', () => {\r\n                        attrs.command.call(this, {target: btn});\r\n                    });\r\n                } else {\r\n                    btn.setAttribute('onclick', attrs.command)\r\n                }\r\n            }\r\n\r\n            return btn;\r\n        }\r\n\r\n        // 创建分隔符\r\n        const createSplitter = (num = 0, attrs) => {\r\n            let el = $C('li', {\r\n                id: sprintf('wmd-spacer%d', num),\r\n                ...attrs\r\n            });\r\n            el.classList.add('wmd-spacer');\r\n            el.classList.add(sprintf('wmd-spacer%d', num));\r\n            return el;\r\n        }\r\n\r\n        const getSpacerCount = () => {\r\n            return $('#wmd-button-bar .wmd-spacer').length;\r\n        }\r\n\r\n        this.toolbar = $('#wmd-button-row');\r\n        this.buttons.forEach(btnCfg => {\r\n            let el, isExists = false;\r\n            if (\"id\" in btnCfg) {\r\n                if (document.getElementById(btnCfg.id)) {\r\n                    el = document.getElementById(btnCfg.id);\r\n                    isExists = true;\r\n                    if (\"icon\" in btnCfg) {\r\n                        el.innerHTML = btnCfg.icon;\r\n                    }\r\n                } else if (\"name\" in btnCfg) {\r\n                    if (!(\"icon\" in btnCfg)) {\r\n                        btnCfg.icon = `<span>${name}</span>`;\r\n                    }\r\n                    el = createButton(btnCfg);\r\n                } else {\r\n                    el = createSplitter(getSpacerCount() + 1, btnCfg);\r\n                }\r\n            } else {\r\n                el = createSplitter(getSpacerCount() + 1, btnCfg);\r\n            }\r\n\r\n            let isInserted = false,\r\n                refNode;\r\n\r\n            /**\r\n             * 获取插入参考节点\r\n             *\r\n             * @param {string} refSel 参考节点或者参考节点选择器\r\n             * @param {*} parent\r\n             * @return {*|jQuery|HTMLElement}\r\n             */\r\n            const getRefNode = (refSel, parent) => {\r\n                if (!parent) parent = this.toolbar;\r\n                if (isString(refSel)) {\r\n                    if (refSel.indexOf(\"|\") > -1) {\r\n                        let selArr = refSel.split(\"|\");\r\n                        for (let i = 0; i < selArr.length; i++) {\r\n                            let el = getRefNode(selArr[i], parent);\r\n                            if (el.length) return el;\r\n                        }\r\n                    } else {\r\n                        return $(refSel, parent);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (\"insertBefore\" in btnCfg) {\r\n                refNode = getRefNode(btnCfg.insertBefore, this.toolbar);\r\n                if (refNode) {\r\n                    refNode.before(el);\r\n                    isInserted = true;\r\n                }\r\n            } else if (\"insertAfter\" in btnCfg) {\r\n                refNode = getRefNode(btnCfg.insertAfter, this.toolbar);\r\n                if (refNode) {\r\n                    refNode.after(el);\r\n                    isInserted = true;\r\n                }\r\n            } else if (\"remove\" in btnCfg && btnCfg.remove && el.parentNode) {\r\n                el.parentNode.removeChild(el);\r\n            }\r\n\r\n            if (!isInserted && !isExists) {\r\n                this.toolbar.append(el);\r\n            }\r\n            if (typeof btnCfg.onMounted === \"function\") {\r\n                btnCfg.onMounted.call(this, {\r\n                    target: el\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleHotkey({objectTarget}) {\r\n        objectTarget.click();\r\n    }\r\n\r\n    handlePreviewEnd() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取文本框文本\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getContent() {\r\n        return this.textarea.getContent();\r\n    }\r\n\r\n    /**\r\n     * 设置文本框文本（记录到 UndoStack）\r\n     *\r\n     * @param {string} text\r\n     */\r\n    setContent(text) {\r\n        this.textarea.executeAndAddUndoStack('setContent', text);\r\n    }\r\n\r\n    /**\r\n     * 往光标虽在位置插入文本（记录到 UndoStack）\r\n     *\r\n     * @param {string} text\r\n     */\r\n    insertText(text) {\r\n        this.textarea.executeAndAddUndoStack('insertText', text);\r\n    }\r\n\r\n    /**\r\n     * 替换文本框选中文本（记录到 UndoStack）\r\n     *\r\n     * @param {string} text\r\n     */\r\n    replaceSelection(text) {\r\n        if (this.getSelectedText()) {\r\n            this.textarea.executeAndAddUndoStack('replaceSelection', text);\r\n        } else {\r\n            this.textarea.executeAndAddUndoStack('insertText', text);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取选中文本\r\n     *\r\n     * @return {string}\r\n     */\r\n    getSelectedText() {\r\n        return this.textarea.getSelectedText();\r\n    }\r\n\r\n    /**\r\n     * 判定是否聚焦到文本框了\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isFocused() {\r\n        return this.textarea.isFocused;\r\n    }\r\n\r\n    /**\r\n     * 增加前缀后缀。\r\n     * @param {string} prefix - 前缀。\r\n     * @param {string} postfix - 后缀。\r\n     * @param {string} defaultText - 没有选中文本时插入到前缀和后缀之间的文本。\r\n     */\r\n    wrapText(prefix, postfix, defaultText = \"\") {\r\n        const {textarea} = this;\r\n        const selectedText = textarea.getSelectedText();\r\n        const currentPos = textarea.getSelection();\r\n        if (selectedText) {\r\n            let prefixPos = selectedText.indexOf(prefix);\r\n            let postfixPos = selectedText.lastIndexOf(postfix);\r\n            let insertNewText = false;\r\n            if (prefixPos !== -1 && postfixPos !== -1) {\r\n                // 前后缀都存在\r\n                if (prefixPos < postfixPos) {\r\n                    // 防止手抖，强制选中正确的位置\r\n                    currentPos.start = currentPos.start + prefixPos;\r\n                    currentPos.end = currentPos.start + postfixPos + postfix.length;\r\n                } else {\r\n                    insertNewText = true;\r\n                }\r\n            } else {\r\n                // 在选中文本前方搜索 prefix\r\n                if (prefixPos === -1) {\r\n                    let textBefore = textarea.getTextInRange(0, currentPos.start);\r\n                    // 从后往前找 postfix\r\n                    let lastPostfixPos = textBefore.lastIndexOf(postfix);\r\n                    if (lastPostfixPos > -1) {\r\n                        // 如果前边存在后缀，截取最后后一个后缀后边的文本\r\n                        textBefore = textBefore.slice(lastPostfixPos + postfix.length, textBefore.length);\r\n                    }\r\n                    prefixPos = textBefore.indexOf(prefix);\r\n                    if (prefixPos > -1) {\r\n                        currentPos.start = currentPos.start - textBefore.length + prefixPos;\r\n                    }\r\n                }\r\n                // 在选中文本后方搜索 postfix\r\n                if (postfixPos === -1) {\r\n                    let textAfter = textarea.getTextInRange(currentPos.end, textarea.getContent().length);\r\n                    // 从前往后找 prefix\r\n                    let firstPrefixPos = textAfter.indexOf(prefix);\r\n                    if (firstPrefixPos > -1) {\r\n                        textAfter = textAfter.slice(0, firstPrefixPos);\r\n                    }\r\n                    postfixPos = textAfter.indexOf(postfix);\r\n                    if (postfixPos !== -1) {\r\n                        currentPos.end = currentPos.end + postfixPos + postfix.length;\r\n                    }\r\n                }\r\n                if (prefixPos === -1 && postfixPos === -1) {\r\n                    insertNewText = true;\r\n                }\r\n            }\r\n            if (insertNewText) {\r\n                const newText = prefix + textarea.getSelectedText() + postfix;\r\n                textarea.executeAndAddUndoStack('replaceSelectionText', newText);\r\n                textarea.setSelection(currentPos.start + prefix.length, currentPos.start + newText.length - postfix.length);\r\n            } else {\r\n                textarea.setSelection(currentPos.start, currentPos.end);\r\n                let newText = textarea.getSelectedText();\r\n                if (newText.startsWith(prefix)) {\r\n                    newText = newText.slice(prefix.length);\r\n                }\r\n                if (newText.endsWith(postfix)) {\r\n                    newText = newText.slice(0, newText.length - postfix.length);\r\n                }\r\n                textarea.executeAndAddUndoStack('replaceSelectionText', newText);\r\n                textarea.setSelection(currentPos.start, currentPos.start + newText.length);\r\n            }\r\n        } else {\r\n            // 插入带有 prefix 和 postfix 的默认文本\r\n            const newPrefix = textarea.isAtLineStart() ? prefix : '\\n' + prefix;\r\n            const newPostfix = textarea.isAtLineEnd() ? postfix : postfix + '\\n';\r\n            const newText = newPrefix + defaultText + newPostfix;\r\n            textarea.executeAndAddUndoStack('insertText', newText);\r\n            const start = textarea.getSelection().start;\r\n            textarea.setSelection(start - newText.length + newPrefix.length, start - newPostfix.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 区块增加前缀。\r\n     * @param {string} prefix - 前缀。\r\n     * @param {string} defaultText - 没有选中文本时插入到前缀后面的文本。\r\n     */\r\n    blockPrefix(prefix, defaultText) {\r\n        const {textarea} = this;\r\n        let realSelectionText = textarea.getSelectedText();\r\n        defaultText || (defaultText = \"\");\r\n        if (realSelectionText.length) {\r\n            let realSelectionArr = realSelectionText.split('\\n');\r\n            console.log(realSelectionArr);\r\n            let newText = realSelectionArr.map((line, i) => {\r\n                return prefix.replace(\"%n\", i + 1) + line;\r\n            }).join(\"\\n\");\r\n            // 检查选中文本的第一行是否在行首，如果不是，在 newText 前添加换行符\r\n            if (!textarea.isAtLineStart()) {\r\n                newText = \"\\n\" + newText;\r\n            }\r\n            textarea.executeAndAddUndoStack('replaceSelectionText', newText + \"\\n\");\r\n        } else {\r\n            let newPrefix = prefix.replace(\"%n\", 1),\r\n                newText = newPrefix + defaultText + \"\\n\",\r\n                startPosFix = 0;\r\n            if (!textarea.isAtLineStart()) {\r\n                newText = \"\\n\" + newText;\r\n                startPosFix = 1;\r\n            }\r\n            textarea.executeAndAddUndoStack('insertText', newText);\r\n            textarea.setSelection(textarea.getSelection().start - newText.length + newPrefix.length + startPosFix, textarea.getSelection().start);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选中文本首行前缀处理。\r\n     * @param {string} prefix - 前缀。\r\n     * @param {string} defaultText - 没有选中文本时插入到前缀后面的文本。\r\n     */\r\n    firstSelectionLinePrefix(prefix, defaultText) {\r\n        const {textarea} = this;\r\n        let realSelectionText = textarea.getSelectedText();\r\n        if (realSelectionText.length) {\r\n            let realSelectionArr = realSelectionText.split('\\n');\r\n            let firstLine = realSelectionArr[0];\r\n\r\n            // 判断选中的第一行是否以指定前缀开头\r\n            if (firstLine.startsWith(prefix)) {\r\n                // 去除前缀\r\n                firstLine = firstLine.substring(prefix.length);\r\n            } else {\r\n                let {start: startPos, end: endPos} = textarea.getSelection();\r\n                if (textarea.getTextInRange(startPos - prefix.length, startPos) === prefix) {\r\n                    textarea.setSelection(startPos - prefix.length, endPos);\r\n                } else {\r\n                    // 增加前缀\r\n                    firstLine = prefix + firstLine;\r\n                }\r\n            }\r\n\r\n            // 重新组合文本\r\n            realSelectionArr[0] = firstLine;\r\n            let newText = realSelectionArr.join(\"\\n\");\r\n\r\n            // 检查选中文本的第一行是否在行首，如果不是，在 newText 前添加换行符\r\n            if (!textarea.isAtLineStart()) {\r\n                newText = \"\\n\" + newText;\r\n            }\r\n\r\n            textarea.executeAndAddUndoStack('replaceSelectionText', newText);\r\n        } else {\r\n            let newPrefix = prefix.replace(\"%n\", 1);\r\n            let newText, startPosFix = 0;\r\n\r\n            if (textarea.isAtLineStart()) {\r\n                newText = newPrefix + defaultText;\r\n            } else {\r\n                newText = \"\\n\" + newPrefix + defaultText;\r\n                startPosFix = 1;\r\n            }\r\n\r\n            textarea.executeAndAddUndoStack('insertText', newText);\r\n\r\n            // 设置光标位置\r\n            textarea.setSelection(textarea.getSelection().start - newText.length + newPrefix.length + startPosFix, textarea.getSelection().start);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开模态框 (参考 Joe 主题)\r\n     * @param options\r\n     */\r\n    openModal(options = {}) {\r\n        const _modalOptions = {\r\n            title: \"标题\",\r\n            innerHTML: '内容',\r\n            showFooter: true,\r\n            checkEmptyOnConfirm: true,\r\n            change: function (modal, params) {\r\n            },\r\n            confirm: function (modal, params) {\r\n                return true;\r\n            },\r\n            cancel: function (event) {\r\n            },\r\n            handle: function (modal) {\r\n            },\r\n            callback: function (modal) {\r\n            }\r\n        };\r\n        let modalOptions = Object.assign(_modalOptions, options);\r\n        let contentWrap = modalOptions.checkEmptyOnConfirm ? '<form class=\"params\"></form>' : \"\";\r\n        if ($(\"#aa-modal\").length < 1) {\r\n            $('#aa-wrapper').append(`<div id=\"aa-modal\" class=\"aa-modal\">\r\n    <div class=\"aa-modal-frame\">\r\n    <div class=\"aa-modal-header\">\r\n        <div class=\"aa-modal-header-title\"></div><div class=\"aa-modal-header-close\"><i class=\"close-icon\"></i></div>\r\n</div>\r\n    <div class=\"aa-modal-body\">\r\n        ${contentWrap}\r\n    </div>\r\n    <div class=\"aa-modal-footer\">\r\n        <button type=\"button\" class=\"aa-modal-footer-button aa-modal-footer-cancel\">取消</button><button type=\"button\" class=\"aa-modal-footer-button aa-modal-footer-confirm\">确定</button>\r\n    </div>\r\n</div>\r\n</div>`);\r\n        }\r\n        $('.aa-modal-header-title').html(modalOptions.title);\r\n        if (modalOptions.checkEmptyOnConfirm) {\r\n            $('.aa-modal-body .params').html(modalOptions.innerHTML);\r\n        } else {\r\n            $('.aa-modal-body').html(modalOptions.innerHTML);\r\n        }\r\n        let modalElm = $(\"#aa-modal\").get(0);\r\n        modalOptions.showFooter ? $(`.aa-modal-footer`).show() : $('.aa-modal-footer').hide();\r\n        $('body').addClass('no-scroll');\r\n        modalOptions.handle.call(this, modalElm);\r\n        $('.aa-modal-footer-confirm').on('click', () => {\r\n            let flag = true;\r\n            if (modalOptions.checkEmptyOnConfirm) {\r\n                // 检查必填输入框\r\n                const form = $('#aa-modal .aa-modal-body .params');\r\n                let params = form.serializeArray();\r\n                $.each(params, function (i, param) {\r\n                    let element = $(`#aa-modal .params [name=${param.name}]`);\r\n                    if (element.prop('required') && param.value === \"\") {\r\n                        flag = false;\r\n                        element.addClass('required-animate');\r\n                        setTimeout(function () {\r\n                            element.removeClass('required-animate');\r\n                        }, 800);\r\n                    }\r\n                });\r\n            }\r\n            if (flag && modalOptions.confirm.call(this, modalElm)) {\r\n                $('#aa-modal').remove();\r\n                $('body').removeClass('no-scroll');\r\n                modalOptions.callback.call(this, modalElm);\r\n            }\r\n        });\r\n        $('.aa-modal-header-close').on('click', (event) => {\r\n            modalOptions.cancel.call(this, event);\r\n            $('#aa-modal').removeClass(\"active\");\r\n            setTimeout(function () {\r\n                $('#aa-modal').remove();\r\n                $('body').removeClass('no-scroll');\r\n            }, 300);\r\n        });\r\n        $('.aa-modal-footer-cancel').on('click', (event) => {\r\n            $('#aa-modal').removeClass(\"active\");\r\n            modalOptions.cancel.call(modalElm, event);\r\n            setTimeout(function () {\r\n                $('#aa-modal').remove();\r\n                $('body').removeClass('no-scroll');\r\n            }, 300);\r\n        });\r\n        let form = $(\".params\", modalElm);\r\n        $(\"input,select,textarea\", form).on('change input', () => {\r\n            let data = form.serializeArray(),\r\n                params = {};\r\n            data.forEach((item) => {\r\n                params[item.name] = item.value;\r\n            })\r\n            modalOptions.change.call(this, modalElm, params);\r\n        });\r\n        $('#aa-modal').addClass('active');\r\n    }\r\n\r\n    /**\r\n     * 来自 Wordpress\r\n     * https://regex101.com/r/ja0b1p/1\r\n     * $0→code $2→tag $3→attr $5→text\r\n     * @param tag\r\n     * @returns {RegExp}\r\n     */\r\n    getShortCodeRegex(tag) {\r\n        return new RegExp('\\\\[(\\\\[?)(' + tag + ')(?![\\\\w-])([^\\\\]\\\\/]*(?:\\\\/(?!\\\\])[^\\\\]\\\\/]*)*?)(?:(\\\\/)\\\\]|\\\\](?:([^\\\\[]*(?:\\\\[(?!\\\\/\\\\2\\\\])[^\\\\[]*)*)(\\\\[\\\\/\\\\2\\\\]))?)(\\\\]?)', 'g');\r\n    }\r\n}\r\n\r\nnew XEditor(\"#text\", \"#md-preview\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t522: 0,\n\t791: 0,\n\t24: 0,\n\t638: 0,\n\t870: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaaeditor\"] = self[\"webpackChunkaaeditor\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [791,24,638,870], () => (__webpack_require__(315)))\n__webpack_require__.O(undefined, [791,24,638,870], () => (__webpack_require__(770)))\n__webpack_require__.O(undefined, [791,24,638,870], () => (__webpack_require__(691)))\n__webpack_require__.O(undefined, [791,24,638,870], () => (__webpack_require__(415)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [791,24,638,870], () => (__webpack_require__(725)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","sprintf","format","args","index","replace","match","length","arg","String","Error","$C","tag","attrs","skipAttrs","el","setAttr","setText","setHTML","name","val","attr","text","html","setAttribute","innerText","innerHTML","p","includes","toString","Object","entries","map","en","join","$A","document","createElement","isString","str","TextAreaUtils","textareaSelector","this","textarea","querySelector","utils","locked","isFocused","initFocusEvents","operate","fn","setContent","insertText","replaceSelectionText","pagedown","textOperation","eventType","handler","addEventListener","removeEventListener","value","content","afterOperate","removeAttribute","startPos","selectionStart","endPos","selectionEnd","currentText","slice","substring","start","end","lineNumber","lines","split","lineStart","lineEnd","newText","newTextBefore","newTextAfter","lineCount","columnCount","i","line","column","$","trigger","focus","top","scrollTop","left","scrollLeft","XEditor","sel","sel_preview","previewArea","console","warn","isInit","buttons","on","event","forEach","button","obj","prototype","call","keys","push","class","init","sp","getScrollPosition","getContent","setScrollPosition","window","append","handlePreviewEnd","e","log","replaceSelection","initToolbar","createButton","btn","title","classList","add","icon","appendChild","get","shortcut","callback","isMac","test","navigator","platform","toLowerCase","pressedKeys","ctrlKey","altKey","shiftKey","key","preventDefault","stopPropagation","objectTarget","error","registerShortcut","handleHotkey","toUpperCase","command","target","createSplitter","num","id","getSpacerCount","toolbar","btnCfg","isExists","getElementById","refNode","isInserted","getRefNode","refSel","parent","indexOf","selArr","insertBefore","before","insertAfter","after","remove","parentNode","removeChild","onMounted","click","executeAndAddUndoStack","getSelectedText","prefix","postfix","defaultText","selectedText","currentPos","getSelection","prefixPos","postfixPos","lastIndexOf","insertNewText","textBefore","getTextInRange","lastPostfixPos","textAfter","firstPrefixPos","setSelection","startsWith","endsWith","newPrefix","isAtLineStart","newPostfix","isAtLineEnd","realSelectionText","realSelectionArr","startPosFix","firstLine","options","modalOptions","assign","showFooter","checkEmptyOnConfirm","change","modal","params","confirm","cancel","handle","contentWrap","modalElm","show","hide","addClass","flag","serializeArray","each","param","element","prop","setTimeout","removeClass","form","data","item","RegExp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","o","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}